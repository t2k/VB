<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetReports" targetNamespace="http://tempuri.org/DataSetReports.xsd" xmlns:mstns="http://tempuri.org/DataSetReports.xsd" xmlns="http://tempuri.org/DataSetReports.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="3" FunctionsComponentName="NegBasisSummary" GeneratorFunctionsComponentClassName="NegBasisSummary" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="NegBasisSummary" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="CreditNetConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CreditNetConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.CreditNetConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ConnectionString (Web.config)" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.ConnectionString.ConnectionString" Provider="System.Data.Odbc" />
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="CreditNetConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CreditNetConnectionString1 (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.CreditNetConnectionString1.ConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="ASPNETDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ASPNETDBConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.ASPNETDBConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TradeSensiHistTableAdapter" GeneratorDataComponentClassName="TradeSensiHistTableAdapter" Name="TradeSensiHist" UserDataComponentName="TradeSensiHistTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByDate" GetMethodModifier="Public" GetMethodName="GetDataByDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByDate" UserSourceName="GetDataByDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.TICKER, TradeSensiHist.TradeType, TradeSensiHist.TradeID, TradeSensiHist.CCY, TradeSensiHist.MaturityDate AS Maturity, 
                      TradeSensiHist.CurrentOutstanding AS AMOUNT, TradeSensiHist.CurrentOutstanding * FX.FXRate AS USDAMOUNT, TradeSensiHist.SecurityName, 
                      TradeSensiHist.CreditBPV AS CREDITBPV, TradeSensiHist.CreditBPV * FX.FXRate AS USDCREDITBPV, TradeSensiHist.Spread, 
                      TradeSensiHist.MTMSpread
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY
WHERE     (TradeSensiHist.SaveDate = @SaveDate) AND (TradeSensiHist.TICKER = @TKR)
ORDER BY TradeSensiHist.TICKER, Maturity</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="TKR" ColumnName="TICKER" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@TKR" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="TICKER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="TradeType" DataSetColumn="TradeType" />
              <Mapping SourceColumn="TradeID" DataSetColumn="TradeID" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="Maturity" DataSetColumn="Maturity" />
              <Mapping SourceColumn="AMOUNT" DataSetColumn="AMOUNT" />
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="CREDITBPV" DataSetColumn="CREDITBPV" />
              <Mapping SourceColumn="USDCREDITBPV" DataSetColumn="USDCREDITBPV" />
              <Mapping SourceColumn="Spread" DataSetColumn="Spread" />
              <Mapping SourceColumn="MTMSpread" DataSetColumn="MTMSpread" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetCorpbyTicker" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetCorpbyTicker" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetCorpbyTicker" UserSourceName="GetCorpbyTicker">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.TICKER, TradeSensiHist.TradeType, TradeSensiHist.TradeID, TradeSensiHist.CCY, TradeSensiHist.MaturityDate AS Maturity, 
                      TradeSensiHist.CurrentOutstanding AS AMOUNT, TradeSensiHist.CurrentOutstanding * FX.FXRate AS USDAMOUNT, TradeSensiHist.SecurityName, 
                      TradeSensiHist.CreditBPV AS CREDITBPV, TradeSensiHist.CreditBPV * FX.FXRate AS USDCREDITBPV, TradeSensiHist.Spread, 
                      TradeSensiHist.MTMSpread, OPICSLIVEDEAL.CUSIP
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY LEFT OUTER JOIN
                      OPICSLIVEDEAL ON TradeSensiHist.TradeID = OPICSLIVEDEAL.DEALID
WHERE     (TradeSensiHist.SaveDate = @SaveDate) AND (TradeSensiHist.TICKER = @TKR) AND (TradeSensiHist.SecurityClass = N'corp' OR
                      TradeSensiHist.SecurityClass = N'cds')
ORDER BY TradeSensiHist.TICKER, Maturity</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="TKR" ColumnName="TICKER" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@TKR" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="TICKER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="MaxDate" Modifier="Public" Name="MaxDate" QueryType="Scalar" ScalarCallRetval="System.DateTime, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="MaxDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     MAX(SaveDate) AS MaxDate
FROM         TradeSensiHist</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TKRbyDateTableAdapter" GeneratorDataComponentClassName="TKRbyDateTableAdapter" Name="TKRbyDate" UserDataComponentName="TKRbyDateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetTKRbyDate" GetMethodModifier="Public" GetMethodName="GetTKRbyDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetTKRbyDate" UserSourceName="GetTKRbyDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT TICKER
FROM         TradeSensiHist
WHERE     (SaveDate = @SaveDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TradeSensiHistClassTableAdapter" GeneratorDataComponentClassName="TradeSensiHistClassTableAdapter" Name="TradeSensiHistClass" UserDataComponentName="TradeSensiHistClassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByDate" GetMethodModifier="Public" GetMethodName="GetDataByDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByDate" UserSourceName="GetDataByDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.TICKER, TradeSensiHist.TradeType, TradeSensiHist.TradeID, TradeSensiHist.CCY, TradeSensiHist.MaturityDate AS Maturity, 
                      TradeSensiHist.CurrentOutstanding AS AMOUNT, TradeSensiHist.CurrentOutstanding * FX.FXRate AS USDAMOUNT, TradeSensiHist.SecurityName, 
                      TradeSensiHist.CreditBPV, TradeSensiHist.SecurityClass
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY
WHERE     (TradeSensiHist.SaveDate = @SaveDate)
ORDER BY TradeSensiHist.TICKER, Maturity</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="TradeType" DataSetColumn="TradeType" />
              <Mapping SourceColumn="TradeID" DataSetColumn="TradeID" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="Maturity" DataSetColumn="Maturity" />
              <Mapping SourceColumn="AMOUNT" DataSetColumn="AMOUNT" />
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="CreditBPV" DataSetColumn="CreditBPV" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataCDS" GetMethodModifier="Public" GetMethodName="GetDataCDS" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataCDS" UserSourceName="GetDataCDS">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     SecurityClass, TradeID, SaveDate, TICKER, CCY, CurrentOutstanding, MaturityDate, SecurityName, TradeStatus
FROM         TradeSensiHist
WHERE     (SaveDate = @SaveDate)
GROUP BY SecurityClass, SaveDate, TradeID, TICKER, CCY, CurrentOutstanding, MaturityDate, SecurityName, TradeStatus
HAVING      (SecurityClass = N'CDS')
ORDER BY TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RptAssetClassExpByDateTableAdapter" GeneratorDataComponentClassName="RptAssetClassExpByDateTableAdapter" Name="RptAssetClassExpByDate" UserDataComponentName="RptAssetClassExpByDateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SecurityClass, SUM(TradeSensiHist.CurrentOutstanding / 1000000 * FX.FXRate) AS USDAMOUNT, 
                      SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS USDCREDITBPV, COUNT(TradeSensiHist.TradeID) AS TradeCount
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY
WHERE     (TradeSensiHist.SaveDate = @SaveDate)
GROUP BY TradeSensiHist.SecurityClass
ORDER BY USDAMOUNT DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
              <Mapping SourceColumn="USDCREDITBPV" DataSetColumn="USDCREDITBPV" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="TradeCount" DataSetColumn="TradeCount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RptAssetClassSummaryTableAdapter" GeneratorDataComponentClassName="RptAssetClassSummaryTableAdapter" Name="RptAssetClassSummary" UserDataComponentName="RptAssetClassSummaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.SecurityClass" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     SecurityClass.SecClassParent AS AssetClass, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate / 1000000 * SecurityClass.BalanceSheet) 
                      AS USDAMOUNT, SUM(TradeSensiHist.CreditBPV * FX.FXRate / 1000) AS USDCREDITBPV, COUNT(TradeSensiHist.TradeID) AS TradeCount
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY INNER JOIN
                          (SELECT     MAX(SaveDate) AS MaxDate
                            FROM          TradeSensiHist AS TradeSensiHist_1) AS tmpTable ON TradeSensiHist.SaveDate = tmpTable.MaxDate INNER JOIN
                      SecurityClass ON TradeSensiHist.SecurityClass = SecurityClass.SecClassCode
GROUP BY SecurityClass.SecClassParent
ORDER BY SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate / 1000000 * SecurityClass.BalanceSheet) DESC</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
              <Mapping SourceColumn="USDCREDITBPV" DataSetColumn="USDCREDITBPV" />
              <Mapping SourceColumn="TradeCount" DataSetColumn="TradeCount" />
              <Mapping SourceColumn="AssetClass" DataSetColumn="AssetClass" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CorpExpSectorTableAdapterTableAdapter" GeneratorDataComponentClassName="CorpExpSectorTableAdapterTableAdapter" Name="CorpExpSectorTableAdapter" UserDataComponentName="CorpExpSectorTableAdapterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetCorpbySector" GetMethodModifier="Public" GetMethodName="GetCorpbySector" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetCorpbySector" UserSourceName="GetCorpbySector">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, TradeSensiHist.TICKER, TradeSensiHist.CCY, TradeSensiHist.CurrentOutstanding, TradeSensiHist.MaturityDate, 
                      TradeSensiHist.Spread, TradeSensiHist.CreditBPV * FX.FXRate AS USDCBPV, TradeSensiHist.SecurityClass, SectorMaster.IndustrySubDesignations, 
                      LEHSectors.Sector, LEHSectors.IndustryDesignations, TradeSensiHist.CurrentOutstanding * FX.FXRate AS USDAMOUNT, TradeSensiHist.TradeStatus, 
                      CAST(DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) AS decimal(10, 2)) / 365 * - 1 AS WAL, TradeSensiHist.SecurityName
FROM         LEHSectors INNER JOIN
                      SectorMaster ON LEHSectors.IndustrySubDesignations = SectorMaster.IndustrySubDesignations RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON SectorMaster.Ticker = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SaveDate = @SaveDate) AND (TradeSensiHist.SecurityClass = N'CDS' OR
                      TradeSensiHist.SecurityClass = N'CORP') AND (TradeSensiHist.TradeStatus = N'O')
ORDER BY TradeSensiHist.TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="CurrentOutstanding" DataSetColumn="CurrentOutstanding" />
              <Mapping SourceColumn="MaturityDate" DataSetColumn="MaturityDate" />
              <Mapping SourceColumn="Spread" DataSetColumn="Spread" />
              <Mapping SourceColumn="USDCBPV" DataSetColumn="USDCBPV" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="IndustrySubDesignations" DataSetColumn="IndustrySubDesignations" />
              <Mapping SourceColumn="Sector" DataSetColumn="Sector" />
              <Mapping SourceColumn="IndustryDesignations" DataSetColumn="IndustryDesignations" />
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
              <Mapping SourceColumn="TradeStatus" DataSetColumn="TradeStatus" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetExposurebySubSector" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetExposurebySubSector" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetExposurebySubSector" UserSourceName="GetExposurebySubSector">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, TradeSensiHist.TICKER, TradeSensiHist.CCY, TradeSensiHist.CurrentOutstanding, TradeSensiHist.MaturityDate, 
                      TradeSensiHist.Spread, TradeSensiHist.CreditBPV * FX.FXRate AS USDCBPV, TradeSensiHist.SecurityClass, SectorMaster.IndustrySubDesignations, 
                      LEHSectors.Sector, LEHSectors.IndustryDesignations, TradeSensiHist.CurrentOutstanding * FX.FXRate AS USDAMOUNT, TradeSensiHist.TradeStatus, 
                      CAST(DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) AS decimal(10, 2)) / 365 * - 1 AS WAL, TradeSensiHist.SecurityName
FROM         LEHSectors INNER JOIN
                      SectorMaster ON LEHSectors.IndustrySubDesignations = SectorMaster.IndustrySubDesignations RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON SectorMaster.Ticker = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SaveDate = @SaveDate) AND (TradeSensiHist.SecurityClass = N'CDS' OR
                      TradeSensiHist.SecurityClass = N'CORP') AND (TradeSensiHist.TradeStatus = N'O') AND 
                      (SectorMaster.IndustrySubDesignations LIKE @IndustrySubDesignations)
ORDER BY TradeSensiHist.TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IndustrySubDesignations" ColumnName="IndustrySubDesignations" DataSourceName="CreditNet.dbo.SectorMaster" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@IndustrySubDesignations" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="IndustrySubDesignations" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetMaturitiesCorp" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetMaturitiesCorp" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetMaturitiesCorp" UserSourceName="GetMaturitiesCorp">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TOP (10) MaturityDate, CurrentOutstanding, CCY, Spread, TradeType, TICKER, SecurityName, SaveDate, SecurityClass
FROM         TradeSensiHist
WHERE     (SaveDate = @Savedate) AND (SecurityClass = N'Corp')
ORDER BY MaturityDate</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Savedate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Savedate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetSectorSummary" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetSectorSummary" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetSectorSummary" UserSourceName="GetSectorSummary">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, SUM(TradeSensiHist.CurrentOutstanding) AS Outstanding, SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS USDCBPV, 
                      SectorMaster.IndustrySubDesignations, LEHSectors.Sector, LEHSectors.IndustryDesignations, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) 
                      AS USDAMOUNT, TradeSensiHist.TradeStatus
FROM         LEHSectors INNER JOIN
                      SectorMaster ON LEHSectors.IndustrySubDesignations = SectorMaster.IndustrySubDesignations RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON SectorMaster.Ticker = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SecurityClass = N'Corp') OR
                      (TradeSensiHist.SecurityClass = N'CDS')
GROUP BY TradeSensiHist.SaveDate, SectorMaster.IndustrySubDesignations, LEHSectors.Sector, LEHSectors.IndustryDesignations, 
                      TradeSensiHist.TradeStatus
HAVING      (TradeSensiHist.TradeStatus = N'O') AND (TradeSensiHist.SaveDate = @Date)
ORDER BY LEHSectors.Sector</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetTickerSummary" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetTickerSummary" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetTickerSummary" UserSourceName="GetTickerSummary">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS USDCBPV, TradeSensiHist.SaveDate, TradeSensiHist.TICKER, 
                      SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS USDAMOUNT, TradeSensiHist.TradeStatus
FROM         LEHSectors INNER JOIN
                      SectorMaster ON LEHSectors.IndustrySubDesignations = SectorMaster.IndustrySubDesignations RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON SectorMaster.Ticker = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SecurityClass = N'CDS') OR
                      (TradeSensiHist.SecurityClass = N'CORP')
GROUP BY TradeSensiHist.SaveDate, TradeSensiHist.TICKER, TradeSensiHist.TradeStatus
HAVING      (TradeSensiHist.SaveDate = { fn CURDATE() }) AND (TradeSensiHist.TradeStatus = N'O')
ORDER BY USDCBPV</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RptAssetClassRiskTableAdapter" GeneratorDataComponentClassName="RptAssetClassRiskTableAdapter" Name="RptAssetClassRisk" UserDataComponentName="RptAssetClassRiskTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetAssetClassRisk" GetMethodModifier="Public" GetMethodName="GetAssetClassRisk" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetAssetClassRisk" UserSourceName="GetAssetClassRisk">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SecurityClass, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS USDAMOUNT, SUM(TradeSensiHist.CreditBPV * FX.FXRate) 
                      AS USDCREDITBPV, COUNT(TradeSensiHist.TradeID) AS TradeCount, SUM(TradeSensiHist.CurrentOutstanding) AS Outstanding, 
                      SUM(TradeSensiHist.Spread * TradeSensiHist.CurrentOutstanding / 10000 * FX.FXRate) AS Carry, SpreadVol.SpreadVolBPS, 
                      SUM(TradeSensiHist.CreditBPV * FX.FXRate * SpreadVol.SpreadVolBPS) AS [VaR 1SD], 
                      SUM(TradeSensiHist.CreditBPV * FX.FXRate * SpreadVol.SpreadVolBPS * 2.5) AS [VaR 2SD], 
                      SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate * DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) / - (365 * derivedtbl_1.USDAMOUNT)) 
                      AS WAL, SUM(TradeSensiHist.Spread * TradeSensiHist.CurrentOutstanding / FX.FXRate) / SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) 
                      AS [WA Spread]
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY INNER JOIN
                      SpreadVol ON TradeSensiHist.SecurityClass = SpreadVol.SecurityClass INNER JOIN
                          (SELECT     TOP (100) PERCENT TradeSensiHist_1.SecurityClass, SUM(TradeSensiHist_1.CurrentOutstanding * FX_1.FXRate) AS USDAMOUNT
                            FROM          FX AS FX_1 INNER JOIN
                                                   TradeSensiHist AS TradeSensiHist_1 ON FX_1.CCY = TradeSensiHist_1.CCY INNER JOIN
                                                   SpreadVol AS SpreadVol_1 ON TradeSensiHist_1.SecurityClass = SpreadVol_1.SecurityClass
                            WHERE      (TradeSensiHist_1.SaveDate = @SaveDate)
                            GROUP BY TradeSensiHist_1.SecurityClass, TradeSensiHist_1.SaveDate
                            ORDER BY TradeSensiHist_1.SecurityClass) AS derivedtbl_1 ON TradeSensiHist.SecurityClass = derivedtbl_1.SecurityClass
WHERE     (TradeSensiHist.SaveDate = @SaveDate)
GROUP BY TradeSensiHist.SecurityClass, TradeSensiHist.SaveDate, SpreadVol.SpreadVolBPS, SpreadVol.Ranking
ORDER BY USDCREDITBPV, TradeSensiHist.SecurityClass</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
              <Mapping SourceColumn="USDCREDITBPV" DataSetColumn="USDCREDITBPV" />
              <Mapping SourceColumn="TradeCount" DataSetColumn="TradeCount" />
              <Mapping SourceColumn="Outstanding" DataSetColumn="Outstanding" />
              <Mapping SourceColumn="Carry" DataSetColumn="Carry" />
              <Mapping SourceColumn="SpreadVolBPS" DataSetColumn="SpreadVolBPS" />
              <Mapping SourceColumn="VaR 1SD" DataSetColumn="VaR 1SD" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
              <Mapping SourceColumn="WA Spread" DataSetColumn="WA Spread" />
              <Mapping SourceColumn="VaR 2SD" DataSetColumn="VaR 2SD" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetAssetClassTotal" GetMethodModifier="Public" GetMethodName="GetAssetClassTotal" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAssetClassTotal" UserSourceName="GetAssetClassTotal">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SecurityClass, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS USDAMOUNT
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY INNER JOIN
                      SpreadVol ON TradeSensiHist.SecurityClass = SpreadVol.SecurityClass
WHERE     (TradeSensiHist.SaveDate = @SaveDate)
GROUP BY TradeSensiHist.SecurityClass, TradeSensiHist.SaveDate
ORDER BY TradeSensiHist.SecurityClass</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRMBS" GetMethodModifier="Public" GetMethodName="GetDataByRMBS" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRMBS" UserSourceName="GetDataByRMBS">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SecurityClass, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS USDAMOUNT, SUM(TradeSensiHist.CreditBPV * FX.FXRate) 
                      AS USDCREDITBPV, COUNT(TradeSensiHist.TradeID) AS TradeCount, SUM(TradeSensiHist.CurrentOutstanding) AS Outstanding, 
                      SUM(TradeSensiHist.Spread * TradeSensiHist.CurrentOutstanding / 10000 * FX.FXRate) AS Carry, SpreadVol.SpreadVolBPS, 
                      SUM(TradeSensiHist.CreditBPV * FX.FXRate * SpreadVol.SpreadVolBPS) AS [VaR 1SD], 
                      SUM(TradeSensiHist.CreditBPV * FX.FXRate * SpreadVol.SpreadVolBPS * 2.5) AS [VaR 2SD], 
                      SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate * DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) / - (365 * derivedtbl_1.USDAMOUNT)) 
                      AS WAL, SUM(TradeSensiHist.Spread * TradeSensiHist.CurrentOutstanding / FX.FXRate) / SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) 
                      AS [WA Spread]
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY INNER JOIN
                      SpreadVol ON TradeSensiHist.SecurityClass = SpreadVol.SecurityClass INNER JOIN
                          (SELECT     TOP (100) PERCENT TradeSensiHist_1.SecurityClass, SUM(TradeSensiHist_1.CurrentOutstanding * FX_1.FXRate) AS USDAMOUNT
                            FROM          FX AS FX_1 INNER JOIN
                                                   TradeSensiHist AS TradeSensiHist_1 ON FX_1.CCY = TradeSensiHist_1.CCY INNER JOIN
                                                   SpreadVol AS SpreadVol_1 ON TradeSensiHist_1.SecurityClass = SpreadVol_1.SecurityClass
                            WHERE      (TradeSensiHist_1.SaveDate = @SaveDate)
                            GROUP BY TradeSensiHist_1.SecurityClass, TradeSensiHist_1.SaveDate
                            ORDER BY TradeSensiHist_1.SecurityClass) AS derivedtbl_1 ON TradeSensiHist.SecurityClass = derivedtbl_1.SecurityClass
WHERE     (TradeSensiHist.SaveDate = @SaveDate)
GROUP BY TradeSensiHist.SecurityClass, TradeSensiHist.SaveDate, SpreadVol.SpreadVolBPS, SpreadVol.Ranking
HAVING      (TradeSensiHist.SecurityClass LIKE N'RMBS%')
ORDER BY SpreadVol.Ranking, TradeSensiHist.SecurityClass</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpreadVolTableAdapter" GeneratorDataComponentClassName="SpreadVolTableAdapter" Name="SpreadVol" UserDataComponentName="SpreadVolTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.SpreadVol" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillSpreadVol" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetSpreadVol" GeneratorSourceName="FillSpreadVol" GetMethodModifier="Public" GetMethodName="GetSpreadVol" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetSpreadVol" UserSourceName="FillSpreadVol">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [SpreadVol] ([SecurityClass], [Ranking], [SpreadVolBPS]) VALUES (@SecurityClass, @Ranking, @SpreadVolBPS)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SecurityClass" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SecurityClass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Ranking" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Ranking" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SpreadVolBPS" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SpreadVolBPS" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     SecurityClass, Ranking, SpreadVolBPS
FROM         SpreadVol</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="Ranking" DataSetColumn="Ranking" />
              <Mapping SourceColumn="SpreadVolBPS" DataSetColumn="SpreadVolBPS" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RptRMBSbyTICKERTableAdapter" GeneratorDataComponentClassName="RptRMBSbyTICKERTableAdapter" Name="RptRMBSbyTICKER" UserDataComponentName="RptRMBSbyTICKERTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.TICKER, SUM(TradeSensiHist.CurrentOutstanding) AS RMBSTICKERAMT, derivedtbl_1.RMBSTotal
FROM         SecurityClass INNER JOIN
                      TradeSensiHist ON SecurityClass.SecClassCode = TradeSensiHist.SecurityClass CROSS JOIN
                          (SELECT     SUM(CurrentOutstanding) AS RMBSTotal
                            FROM          TradeSensiHist AS TradeSensiHist_2
                            WHERE      (LEFT(SecurityClass, 4) = 'RMBS') AND (SaveDate = @SaveDate)) AS derivedtbl_1
GROUP BY TradeSensiHist.TICKER, derivedtbl_1.RMBSTotal, TradeSensiHist.SaveDate, SecurityClass.SecClassParent
HAVING      (TradeSensiHist.SaveDate = @SaveDate) AND (SecurityClass.SecClassParent = N'RMBS')
ORDER BY RMBSTICKERAMT DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="RMBSTICKERAMT" DataSetColumn="RMBSTICKERAMT" />
              <Mapping SourceColumn="RMBSTotal" DataSetColumn="RMBSTotal" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PortfolioMDY1TableAdapter" GeneratorDataComponentClassName="PortfolioMDY1TableAdapter" Name="PortfolioMDY1" UserDataComponentName="PortfolioMDY1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataRtgMdyPortfolio" GetMethodModifier="Public" GetMethodName="GetDataRtgMdyPortfolio" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataRtgMdyPortfolio" UserSourceName="GetDataRtgMdyPortfolio">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     RefObRating.RatingMDY, SUM(TradeSensiHist.CurrentOutstanding) AS Expr1, CorpTicker.SENIORITY, 
                      SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS USDAMOUNT
FROM         Ratings INNER JOIN
                      CorpTicker INNER JOIN
                      RefObRating ON CorpTicker.[REFERENCE OBLIGATION] = RefObRating.RefObSecID ON Ratings.Rating = RefObRating.RatingMDY INNER JOIN
                      TradeSensiHist ON CorpTicker.CCY = TradeSensiHist.CCY AND CorpTicker.[CORP TICKER] = TradeSensiHist.TICKER CROSS JOIN
                      FX
WHERE     (Ratings.RAShort = N'MDY') AND (TradeSensiHist.SecurityClass = N'Corp' OR
                      TradeSensiHist.SecurityClass = N'CDS')
GROUP BY Ratings.RatingOrder, RefObRating.RatingMDY, CorpTicker.SENIORITY, TradeSensiHist.SaveDate
HAVING      (CorpTicker.SENIORITY = N'SENIOR') AND (TradeSensiHist.SaveDate = @date)
ORDER BY Ratings.RatingOrder, USDAMOUNT DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RatingMDY" DataSetColumn="RatingMDY" />
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
              <Mapping SourceColumn="SENIORITY" DataSetColumn="SENIORITY" />
              <Mapping SourceColumn="USDAMOUNT" DataSetColumn="USDAMOUNT" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetDataBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     RefObRating.RatingMDY, SUM(TradeSensiHist.CurrentOutstanding) AS CurrentOutstanding, TradeSensiHist.SaveDate, CorpTicker.[CORP TICKER], 
                      RefObRating.RatingSP, RefObRating.RefObSecID, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS USDAMOUNT, 
                      CorpTicker.SENIORITY
FROM         Ratings INNER JOIN
                      CorpTicker INNER JOIN
                      RefObRating ON CorpTicker.[REFERENCE OBLIGATION] = RefObRating.RefObSecID ON Ratings.Rating = RefObRating.RatingMDY INNER JOIN
                      TradeSensiHist ON CorpTicker.[CORP TICKER] = TradeSensiHist.TICKER CROSS JOIN
                      FX
WHERE     (Ratings.RAShort = N'MDY') AND (TradeSensiHist.SecurityClass = N'Corp' OR
                      TradeSensiHist.SecurityClass = N'CDS')
GROUP BY Ratings.RatingOrder, RefObRating.RatingMDY, TradeSensiHist.SaveDate, CorpTicker.[CORP TICKER], RefObRating.RatingSP, 
                      RefObRating.RefObSecID, CorpTicker.SENIORITY
HAVING      (TradeSensiHist.SaveDate = { fn CURDATE() }) AND (CorpTicker.SENIORITY = N'SENIOR')
ORDER BY Ratings.RatingOrder, USDAMOUNT DESC</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SectorSpreadTableAdapter" GeneratorDataComponentClassName="SectorSpreadTableAdapter" Name="SectorSpread" UserDataComponentName="SectorSpreadTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="SECTORSPREAD" GetMethodModifier="Public" GetMethodName="SECTORSPREAD" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="SECTORSPREAD" UserSourceName="SECTORSPREAD">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, ROUND(SUM(TradeSensiHist.Spread * TradeSensiHist.CurrentOutstanding * FX.FXRate) 
                      / SUM(ABS(TradeSensiHist.CurrentOutstanding) * FX.FXRate), 2) AS [WA SPREAD], LEHSectors.IndustrySubDesignations, 
                      SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS [USD OS], SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS [USD BPV], 
                      ABS(SUM(CAST(DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) AS decimal(10, 2)) * TradeSensiHist.CurrentOutstanding * FX.FXRate)) 
                      / ABS(SUM(ABS(TradeSensiHist.CurrentOutstanding) * FX.FXRate) * 365) AS WAL
FROM         LEHSectors INNER JOIN
                      SectorMaster ON LEHSectors.IndustrySubDesignations = SectorMaster.IndustrySubDesignations INNER JOIN
                      TradeSensiHist ON SectorMaster.Ticker = TradeSensiHist.TICKER INNER JOIN
                      FX ON TradeSensiHist.CCY = FX.CCY
WHERE     (TradeSensiHist.SaveDate = @Date) AND (TradeSensiHist.SecurityClass = N'CORP' OR
                      TradeSensiHist.SecurityClass = N'CDS')
GROUP BY TradeSensiHist.SaveDate, LEHSectors.IndustrySubDesignations
ORDER BY LEHSectors.IndustrySubDesignations</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="WA SPREAD" DataSetColumn="WA SPREAD" />
              <Mapping SourceColumn="IndustrySubDesignations" DataSetColumn="IndustrySubDesignations" />
              <Mapping SourceColumn="USD OS" DataSetColumn="USD OS" />
              <Mapping SourceColumn="USD BPV" DataSetColumn="USD BPV" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="mpCDSCurveTableAdapter" GeneratorDataComponentClassName="mpCDSCurveTableAdapter" Name="mpCDSCurve" UserDataComponentName="mpCDSCurveTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.SelectCDSSPREADbyDay" DbObjectType="StoredProcedure" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.SelectCDSSPREADbyDay</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Object" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="0" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Date" ColumnName="EvalDate" DataSourceName="CreditNet.dbo.mpCDSCurve" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="EvalDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EvalDate" DataSetColumn="EvalDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="Tier" DataSetColumn="Tier" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="DocClause" DataSetColumn="DocClause" />
              <Mapping SourceColumn="_5Y" DataSetColumn="_5Y" />
              <Mapping SourceColumn="_4Y" DataSetColumn="_4Y" />
              <Mapping SourceColumn="_3Y" DataSetColumn="_3Y" />
              <Mapping SourceColumn="_2Y" DataSetColumn="_2Y" />
              <Mapping SourceColumn="_1Y" DataSetColumn="_1Y" />
              <Mapping SourceColumn="_7Y" DataSetColumn="_7Y" />
              <Mapping SourceColumn="_15Y" DataSetColumn="_15Y" />
              <Mapping SourceColumn="_10Y" DataSetColumn="_10Y" />
              <Mapping SourceColumn="_20Y" DataSetColumn="_20Y" />
              <Mapping SourceColumn="_30Y" DataSetColumn="_30Y" />
              <Mapping SourceColumn="Recovery" DataSetColumn="Recovery" />
              <Mapping SourceColumn="_6m" DataSetColumn="_6m" />
              <Mapping SourceColumn="AvRating" DataSetColumn="AvRating" />
              <Mapping SourceColumn="Country" DataSetColumn="Country" />
              <Mapping SourceColumn="Region" DataSetColumn="Region" />
              <Mapping SourceColumn="Sector" DataSetColumn="Sector" />
              <Mapping SourceColumn="Depth" DataSetColumn="Depth" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CDSTODAYTableAdapter" GeneratorDataComponentClassName="CDSTODAYTableAdapter" Name="CDSTODAY" UserDataComponentName="CDSTODAYTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.CDSTODAY" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="CDSZSCORE30D" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="CDSZSCORE30D" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="CDSZSCORE30D" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CDSTODAY.TICKER, CDSTODAY._5Y, AVG(mpCDSCurve._5Y) AS AVG, STDEV(mpCDSCurve._5Y) AS STDev, (CDSTODAY._5Y - AVG(mpCDSCurve._5Y)) 
                      / ABS(STDEV(mpCDSCurve._5Y)) AS ZSCORE, CDSTODAY.Tier, CDSTODAY.CCY, CDSTODAY.DocClause
FROM         CDSTODAY INNER JOIN
                      mpCDSCurve ON CDSTODAY.TICKER = mpCDSCurve.TICKER
WHERE     (mpCDSCurve.EvalDate &gt; GETDATE() - 30) AND (mpCDSCurve._5Y &gt; 0)
GROUP BY CDSTODAY.TICKER, CDSTODAY._5Y, CDSTODAY.Tier, CDSTODAY.CCY, CDSTODAY.DocClause
HAVING      (STDEV(mpCDSCurve._5Y) &lt;&gt; 0) AND (CDSTODAY.TICKER = @Ticker) AND (CDSTODAY.Tier = N'SNRFOR') AND (CDSTODAY.CCY = N'USD')</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Ticker" ColumnName="TICKER" DataSourceName="CreditNet.dbo.CDSTODAY" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@Ticker" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="TICKER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="_5Y" DataSetColumn="_5Y" />
              <Mapping SourceColumn="AVG" DataSetColumn="AVG" />
              <Mapping SourceColumn="ZSCORE" DataSetColumn="ZSCORE" />
              <Mapping SourceColumn="STDev" DataSetColumn="STDev" />
              <Mapping SourceColumn="Tier" DataSetColumn="Tier" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="DocClause" DataSetColumn="DocClause" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NegBasisSingleTradeTableAdapter" GeneratorDataComponentClassName="NegBasisSingleTradeTableAdapter" Name="NegBasisSingleTrade" UserDataComponentName="NegBasisSingleTradeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetNegBasisTrades" GetMethodModifier="Public" GetMethodName="GetNegBasisTrades" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetNegBasisTrades" UserSourceName="GetNegBasisTrades">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, TradeSensiHist.TradeID, TradeSensiHist.TICKER, TradeSensiHist.CurrentOutstanding, TradeSensiHist.MaturityDate, 
                      TradeSensiHist.Spread, TradeSensiHist.MTMSpread, TradeSensiHist.HPDays, TradeSensiHist.HPCarry, TradeSensiHist.HPPresentValue, 
                      TradeSensiHist.HPTotalPL, TradeSensiHist.CreditBPV, TradeSensiHist.SecurityName, TradeSensiHist.SecurityClass, 
                      NegBasisTrades.NegBasisID
FROM         TradeSensiHist INNER JOIN
                      NegBasisTrades ON TradeSensiHist.TradeID = NegBasisTrades.TradeID INNER JOIN
                          (SELECT     MAX(SaveDate) AS MaxDate
                            FROM          TradeSensiHist AS TradeSensiHist_1) AS derivedtbl_1 ON TradeSensiHist.SaveDate = derivedtbl_1.MaxDate
ORDER BY NegBasisTrades.NegBasisID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="TradeID" DataSetColumn="TradeID" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="CurrentOutstanding" DataSetColumn="CurrentOutstanding" />
              <Mapping SourceColumn="MaturityDate" DataSetColumn="MaturityDate" />
              <Mapping SourceColumn="Spread" DataSetColumn="Spread" />
              <Mapping SourceColumn="MTMSpread" DataSetColumn="MTMSpread" />
              <Mapping SourceColumn="HPDays" DataSetColumn="HPDays" />
              <Mapping SourceColumn="HPCarry" DataSetColumn="HPCarry" />
              <Mapping SourceColumn="HPPresentValue" DataSetColumn="HPPresentValue" />
              <Mapping SourceColumn="HPTotalPL" DataSetColumn="HPTotalPL" />
              <Mapping SourceColumn="CreditBPV" DataSetColumn="CreditBPV" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="NegBasisID" DataSetColumn="NegBasisID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetBasisPackage" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetBasisPackage" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetBasisPackage" UserSourceName="GetBasisPackage">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, SUM(TradeSensiHist.CurrentOutstanding) AS OS, 
                      SUM(ROUND(TradeSensiHist.Spread * TradeSensiHist.CurrentOutstanding / ABS(TradeSensiHist.CurrentOutstanding), 2)) AS Basis, 
                      SUM(ROUND(TradeSensiHist.MTMSpread * TradeSensiHist.CurrentOutstanding / ABS(TradeSensiHist.CurrentOutstanding), 2)) AS [MTM Basis], 
                      AVG(TradeSensiHist.HPDays) AS Days, SUM(TradeSensiHist.HPCarry) AS Carry, SUM(TradeSensiHist.HPPresentValue) AS [MTM Value], 
                      SUM(TradeSensiHist.HPTotalPL) AS [Total PL], SUM(TradeSensiHist.CreditBPV) AS BPV, NegBasisTrades.NegBasisID
FROM         TradeSensiHist INNER JOIN
                      NegBasisTrades ON TradeSensiHist.TradeID = NegBasisTrades.TradeID INNER JOIN
                          (SELECT     MAX(SaveDate) AS MaxDate
                            FROM          TradeSensiHist AS TradeSensiHist_1) AS derivedtbl_1 ON TradeSensiHist.SaveDate = derivedtbl_1.MaxDate
GROUP BY TradeSensiHist.SaveDate, NegBasisTrades.NegBasisID
ORDER BY NegBasisTrades.NegBasisID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CDSMoverPortfolioTableAdapter" GeneratorDataComponentClassName="CDSMoverPortfolioTableAdapter" Name="CDSMoverPortfolio" UserDataComponentName="CDSMoverPortfolioTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetCDSMoverWider" GetMethodModifier="Public" GetMethodName="GetCDSMoverWider" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetCDSMoverWider" UserSourceName="GetCDSMoverWider">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TOP (10) PERCENT mpCDSCurve.CCY, ROUND(CDSTODAY._5Y * 10000, 2) AS Today5Y, ROUND(mpCDSCurve._5Y * 10000, 2) AS Yesterday5Y, 
                      ROUND((CDSTODAY._5Y - mpCDSCurve._5Y) * 10000, 2) AS Change, TradeSensiHist.SaveDate, TradeSensiHist.TICKER
FROM         mpCDSCurve INNER JOIN
                      TradeSensiHist ON mpCDSCurve.TICKER = TradeSensiHist.TICKER INNER JOIN
                      CDSTODAY ON mpCDSCurve.TICKER = CDSTODAY.TICKER
WHERE     (mpCDSCurve.EvalDate = @yesterday)
GROUP BY mpCDSCurve.CCY, mpCDSCurve.Tier, TradeSensiHist.SaveDate, ROUND(CDSTODAY._5Y * 10000, 2), ROUND(mpCDSCurve._5Y * 10000, 2), 
                      ROUND((CDSTODAY._5Y - mpCDSCurve._5Y) * 10000, 2), TradeSensiHist.TICKER, CDSTODAY.Tier
HAVING      (TradeSensiHist.SaveDate = CONVERT(DATETIME, '2006-11-08 00:00:00', 102)) AND (mpCDSCurve.Tier = N'SNRFOR') AND 
                      (CDSTODAY.Tier = N'SNRFOR')
ORDER BY Change DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="yesterday" ColumnName="EvalDate" DataSourceName="CreditNet.dbo.mpCDSCurve" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@yesterday" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="EvalDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="Today5Y" DataSetColumn="Today5Y" />
              <Mapping SourceColumn="Yesterday5Y" DataSetColumn="Yesterday5Y" />
              <Mapping SourceColumn="Change" DataSetColumn="Change" />
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetCDSMoverTighter" GetMethodModifier="Public" GetMethodName="GetCDSMoverTighter" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetCDSMoverTighter" UserSourceName="GetCDSMoverTighter">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TOP (10) PERCENT mpCDSCurve.CCY, ROUND(CDSTODAY._5Y * 10000, 2) AS Today5Y, ROUND(mpCDSCurve._5Y * 10000, 2) AS Yesterday5Y, 
                      ROUND((CDSTODAY._5Y - mpCDSCurve._5Y) * 10000, 2) AS Change, TradeSensiHist.SaveDate, TradeSensiHist.TICKER
FROM         mpCDSCurve INNER JOIN
                      TradeSensiHist ON mpCDSCurve.TICKER = TradeSensiHist.TICKER INNER JOIN
                      CDSTODAY ON mpCDSCurve.TICKER = CDSTODAY.TICKER
WHERE     (mpCDSCurve.EvalDate = @yesterday)
GROUP BY mpCDSCurve.CCY, mpCDSCurve.Tier, TradeSensiHist.SaveDate, ROUND(CDSTODAY._5Y * 10000, 2), ROUND(mpCDSCurve._5Y * 10000, 2), 
                      ROUND((CDSTODAY._5Y - mpCDSCurve._5Y) * 10000, 2), TradeSensiHist.TICKER, CDSTODAY.Tier
HAVING      (TradeSensiHist.SaveDate = CONVERT(DATETIME, '2006-11-08 00:00:00', 102)) AND (mpCDSCurve.Tier = N'SNRFOR') AND 
                      (CDSTODAY.Tier = N'SNRFOR')
ORDER BY Change</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="yesterday" ColumnName="EvalDate" DataSourceName="CreditNet.dbo.mpCDSCurve" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@yesterday" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="EvalDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CorpPortSPTableAdapter" GeneratorDataComponentClassName="CorpPortSPTableAdapter" Name="CorpPortSP" UserDataComponentName="CorpPortSPTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetBreakdownSP" GetMethodModifier="Public" GetMethodName="GetBreakdownSP" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetBreakdownSP" UserSourceName="GetBreakdownSP">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS Outstanding, SPRatingsIFace.Derived_Rating, Ratings.RAShort, 
                      Ratings.RatingOrder, SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS CBPV, AVG(CAST(DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) 
                      AS decimal(10, 2)) / 365 * - 1) AS WAL, SPRatingsIFace.EvalDate
FROM         REDENTITY INNER JOIN
                      Ratings INNER JOIN
                      SPRatingsIFace ON Ratings.Rating = SPRatingsIFace.Derived_Rating ON REDENTITY.REDCODE = SPRatingsIFace.CLIPS RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON REDENTITY.TICKER = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SecurityClass = N'Corp') OR
                      (TradeSensiHist.SecurityClass = N'CDS')
GROUP BY TradeSensiHist.SaveDate, SPRatingsIFace.Derived_Rating, Ratings.RAShort, Ratings.RatingOrder, SPRatingsIFace.EvalDate
HAVING      (TradeSensiHist.SaveDate = @myDate) AND (Ratings.RAShort = N'SP' OR
                      Ratings.RAShort IS NULL) AND (SPRatingsIFace.EvalDate = @myDate)
ORDER BY Ratings.RatingOrder</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="myDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@myDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="Outstanding" DataSetColumn="Outstanding" />
              <Mapping SourceColumn="Derived_Rating" DataSetColumn="Derived_Rating" />
              <Mapping SourceColumn="RAShort" DataSetColumn="RAShort" />
              <Mapping SourceColumn="RatingOrder" DataSetColumn="RatingOrder" />
              <Mapping SourceColumn="CBPV" DataSetColumn="CBPV" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
              <Mapping SourceColumn="EvalDate" DataSetColumn="EvalDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RMBSTradeSensiTableAdapter" GeneratorDataComponentClassName="RMBSTradeSensiTableAdapter" Name="RMBSTradeSensi" UserDataComponentName="RMBSTradeSensiTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     SecurityClass, SecuritySubClass, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count, 
                      CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap
FROM         TradeSensiHist
WHERE     (SaveDate = @SaveDate)
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE N'RMBS%')
ORDER BY SecurityClass DESC, Wrap, SecuritySubClass</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="SecuritySubClass" DataSetColumn="SecuritySubClass" />
              <Mapping SourceColumn="CreditBPV" DataSetColumn="CreditBPV" />
              <Mapping SourceColumn="Outstanding" DataSetColumn="Outstanding" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
              <Mapping SourceColumn="Count" DataSetColumn="Count" />
              <Mapping SourceColumn="Wrap" DataSetColumn="Wrap" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataCDS" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetDataCDS" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataCDS" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     SecurityClass, TradeID, SaveDate, TICKER, CCY, CurrentOutstanding, MaturityDate, SecurityName, TradeStatus
FROM         TradeSensiHist
WHERE     (SaveDate = @SaveDate)
GROUP BY SecurityClass, SaveDate, TradeID, TICKER, CCY, CurrentOutstanding, MaturityDate, SecurityName, TradeStatus
HAVING      (SecurityClass = N'CDS')
ORDER BY TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataAltA" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataAltA" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataAltA" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count, 
                      CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap
FROM         TradeSensiHist
WHERE savedate = @SaveDate
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE N'RMBS%' AND SecuritySubClass LIKE '%Alt A%')
ORDER BY SecurityClass DESC


</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataJumbo" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetDataJumbo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataJumbo" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count, 
                      CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap
FROM         TradeSensiHist
WHERE savedate = @SaveDate
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE N'RMBS%' AND SecuritySubClass LIKE '%Jumbo%')
ORDER BY SecurityClass DESC



</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy2" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataSubPrime" GeneratorSourceName="FillBy2" GetMethodModifier="Public" GetMethodName="GetDataSubPrime" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataSubPrime" UserSourceName="FillBy2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count, 
                      CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap
FROM         TradeSensiHist
WHERE savedate = @SaveDate
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE N'RMBS%' AND SecuritySubClass LIKE '%SubPrime%')
ORDER BY SecurityClass DESC

</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy3" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataAgency" GeneratorSourceName="FillBy3" GetMethodModifier="Public" GetMethodName="GetDataAgency" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataAgency" UserSourceName="FillBy3">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count, 
                      CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap
FROM         TradeSensiHist
WHERE savedate = @SaveDate
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE N'RMBS%' AND SecuritySubClass LIKE '%Agency%')
ORDER BY SecurityClass DESC


</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SaveDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@SaveDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SPRatingDetailTableAdapter" GeneratorDataComponentClassName="SPRatingDetailTableAdapter" Name="SPRatingDetail" UserDataComponentName="SPRatingDetailTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetRatingDetail" GetMethodModifier="Public" GetMethodName="GetRatingDetail" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetRatingDetail" UserSourceName="GetRatingDetail">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) AS Outstanding, SPRatingsIFace.Derived_Rating, Ratings.RAShort, 
                      Ratings.RatingOrder, SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS CBPV, AVG(CAST(DATEDIFF(day, TradeSensiHist.MaturityDate, GETDATE()) 
                      AS decimal(10, 2)) / 365 * - 1) AS WAL, SPRatingsIFace.EvalDate, TradeSensiHist.TICKER, TradeSensiHist.CCY, TradeSensiHist.MaturityDate, 
                      TradeSensiHist.SecurityName, TradeSensiHist.TradeID, TradeSensiHist.SecurityClass
FROM         REDENTITY INNER JOIN
                      Ratings INNER JOIN
                      SPRatingsIFace ON Ratings.Rating = SPRatingsIFace.Derived_Rating ON REDENTITY.REDCODE = SPRatingsIFace.CLIPS RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON REDENTITY.TICKER = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SecurityClass = N'Corp') OR
                      (TradeSensiHist.SecurityClass = N'CDS')
GROUP BY TradeSensiHist.SaveDate, SPRatingsIFace.Derived_Rating, Ratings.RAShort, Ratings.RatingOrder, SPRatingsIFace.EvalDate, 
                      TradeSensiHist.TICKER, TradeSensiHist.CCY, TradeSensiHist.MaturityDate, TradeSensiHist.SecurityName, TradeSensiHist.TradeID, 
                      TradeSensiHist.SecurityClass
HAVING      (TradeSensiHist.SaveDate = @date) AND (Ratings.RAShort = N'SP' OR
                      Ratings.RAShort IS NULL) AND (SPRatingsIFace.EvalDate = @date) AND (SPRatingsIFace.Derived_Rating = @Rating)
ORDER BY Ratings.RatingOrder</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Rating" ColumnName="Derived_Rating" DataSourceName="CreditNet.dbo.SPRatingsIFace" DataTypeServer="nvarchar(4)" DbType="String" Direction="Input" ParameterName="@Rating" Precision="0" ProviderType="NVarChar" Scale="0" Size="4" SourceColumn="Derived_Rating" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="Outstanding" DataSetColumn="Outstanding" />
              <Mapping SourceColumn="Derived_Rating" DataSetColumn="Derived_Rating" />
              <Mapping SourceColumn="RAShort" DataSetColumn="RAShort" />
              <Mapping SourceColumn="RatingOrder" DataSetColumn="RatingOrder" />
              <Mapping SourceColumn="CBPV" DataSetColumn="CBPV" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
              <Mapping SourceColumn="EvalDate" DataSetColumn="EvalDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="MaturityDate" DataSetColumn="MaturityDate" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="TradeID" DataSetColumn="TradeID" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RMBS SubClassDetailsTableAdapter" GeneratorDataComponentClassName="RMBS_SubClassDetailsTableAdapter" Name="RMBS SubClassDetails" UserDataComponentName="RMBS SubClassDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, TradeSensiHist.SecuritySubClass, TradeSensiHist.SecurityClass, TradeSensiHist.SecurityName, 
                      TradeSensiHist.MaturityDate, TradeSensiHist.CurrentOutstanding, OPICSLIVEDEAL.CUSIP, TradeSensiHist.CreditBPV
FROM         TradeSensiHist INNER JOIN
                      OPICSLIVEDEAL ON TradeSensiHist.TradeID = OPICSLIVEDEAL.DEALID
WHERE     (TradeSensiHist.SaveDate = @Date) AND (TradeSensiHist.SecuritySubClass = @SubClass)
ORDER BY TradeSensiHist.SecurityName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="SubClass" ColumnName="SecuritySubClass" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="nvarchar(20)" DbType="String" Direction="Input" ParameterName="@SubClass" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumn="SecuritySubClass" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="SecuritySubClass" DataSetColumn="SecuritySubClass" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="MaturityDate" DataSetColumn="MaturityDate" />
              <Mapping SourceColumn="CurrentOutstanding" DataSetColumn="CurrentOutstanding" />
              <Mapping SourceColumn="CUSIP" DataSetColumn="CUSIP" />
              <Mapping SourceColumn="CreditBPV" DataSetColumn="CreditBPV" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LBORiskExposureTableAdapter" GeneratorDataComponentClassName="LBORiskExposureTableAdapter" Name="LBORiskExposure" UserDataComponentName="LBORiskExposureTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetLBOScorebyExposure" GetMethodModifier="Public" GetMethodName="GetLBOScorebyExposure" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetLBOScorebyExposure" UserSourceName="GetLBOScorebyExposure">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate AS Expr1, SUM(TradeSensiHist.CreditBPV * FX.FXRate) AS Expr2, SUM(TradeSensiHist.CurrentOutstanding * FX.FXRate) 
                      AS Expr3, TradeSensiHist.TICKER, derivedtbl_1.Expr1 AS AvgLBO, derivedtbl_1.Expr2 AS Count
FROM         FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY LEFT OUTER JOIN
                          (SELECT     AVG(DZLBOScore) AS Expr1, COUNT(DZLBOScore) AS Expr2, Ticker
                            FROM          LBOMaster
                            WHERE      (Date &gt; CONVERT(DATETIME, @Startdate, 102))
                            GROUP BY Ticker) AS derivedtbl_1 ON TradeSensiHist.TICKER = derivedtbl_1.Ticker
WHERE     (TradeSensiHist.SecurityClass = N'corp' OR
                      TradeSensiHist.SecurityClass = N'cds') AND (TradeSensiHist.SaveDate = @Today)
GROUP BY TradeSensiHist.SaveDate, TradeSensiHist.TICKER, derivedtbl_1.Expr1, derivedtbl_1.Expr2
ORDER BY AvgLBO DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Today" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Today" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="Expr1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Startdate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Startdate" Precision="0" Scale="0" Size="8" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="Expr2" DataSetColumn="Expr2" />
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
              <Mapping SourceColumn="Expr3" DataSetColumn="Expr3" />
              <Mapping SourceColumn="AvgLBO" DataSetColumn="AvgLBO" />
              <Mapping SourceColumn="Count" DataSetColumn="Count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SPCrossTabTableAdapter" GeneratorDataComponentClassName="SPCrossTabTableAdapter" Name="SPCrossTab" UserDataComponentName="SPCrossTabTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetSPBreakdownCT" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetSPBreakdownCT" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetSPBreakdownCT" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, SPRatingsIFace.EvalDate, TradeSensiHist.TICKER, 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'AAA' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS AAA, 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'AA+' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS [AA+], 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'AA' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS AA, 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'AA-' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS [AA-], 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'A+' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS [A+], 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'A' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS A, 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'AAA' THEN 0 WHEN 'AA+' THEN 0 WHEN 'AA' THEN 0 WHEN 'AA-' THEN 0 WHEN 'A+' THEN 0 WHEN
                       'A' THEN 0 WHEN 'A-' THEN 0 WHEN 'BBB+' THEN 0 WHEN 'BBB' THEN 0 WHEN 'BBB-' THEN 0 ELSE TradeSensiHist.CurrentOutstanding * FX.FXRate
                       END) AS [N/A], SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'BBB+' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) 
                      AS [BBB+], SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'BBB' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS BBB, 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'BBB-' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS [BBB-], 
                      SUM(CASE SPRatingsIFace.Derived_Rating WHEN 'A-' THEN TradeSensiHist.CurrentOutstanding * FX.FXRate ELSE 0 END) AS [A-]
FROM         REDENTITY INNER JOIN
                      SPRatingsIFace ON REDENTITY.REDCODE = SPRatingsIFace.CLIPS RIGHT OUTER JOIN
                      FX INNER JOIN
                      TradeSensiHist ON FX.CCY = TradeSensiHist.CCY ON REDENTITY.TICKER = TradeSensiHist.TICKER
WHERE     (TradeSensiHist.SecurityClass = N'Corp') OR
                      (TradeSensiHist.SecurityClass = N'CDS')
GROUP BY TradeSensiHist.SaveDate, SPRatingsIFace.EvalDate, TradeSensiHist.TICKER
HAVING      (TradeSensiHist.SaveDate = @date) AND (SPRatingsIFace.EvalDate = @date)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="EvalDate" DataSetColumn="EvalDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="AAA" DataSetColumn="AAA" />
              <Mapping SourceColumn="AA+" DataSetColumn="AA+" />
              <Mapping SourceColumn="AA" DataSetColumn="AA" />
              <Mapping SourceColumn="AA-" DataSetColumn="AA-" />
              <Mapping SourceColumn="A+" DataSetColumn="A+" />
              <Mapping SourceColumn="A" DataSetColumn="A" />
              <Mapping SourceColumn="N/A" DataSetColumn="N/A" />
              <Mapping SourceColumn="BBB+" DataSetColumn="BBB+" />
              <Mapping SourceColumn="BBB" DataSetColumn="BBB" />
              <Mapping SourceColumn="BBB-" DataSetColumn="BBB-" />
              <Mapping SourceColumn="A-" DataSetColumn="A-" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RedCodeCheckTableAdapter" GeneratorDataComponentClassName="RedCodeCheckTableAdapter" Name="RedCodeCheck" UserDataComponentName="RedCodeCheckTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetNoRedCode" GetMethodModifier="Public" GetMethodName="GetNoRedCode" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetNoRedCode" UserSourceName="GetNoRedCode">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, TradeSensiHist.TICKER, TradeSensiHist.SecurityClass, REDENTITY.REDCODE, TradeSensiHist.CurrentOutstanding
FROM         TradeSensiHist LEFT OUTER JOIN
                      REDENTITY ON TradeSensiHist.TICKER = REDENTITY.TICKER
WHERE     (TradeSensiHist.SaveDate = @myDate) AND (TradeSensiHist.SecurityClass = N'Corp' OR
                      TradeSensiHist.SecurityClass = N'CDS') AND (REDENTITY.REDCODE IS NULL)
ORDER BY TradeSensiHist.TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="myDate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@myDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="REDCODE" DataSetColumn="REDCODE" />
              <Mapping SourceColumn="CurrentOutstanding" DataSetColumn="CurrentOutstanding" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OPICSBONDSTableAdapter" GeneratorDataComponentClassName="OPICSBONDSTableAdapter" Name="OPICSBONDS" UserDataComponentName="OPICSBONDSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetBonds" GetMethodModifier="Public" GetMethodName="GetBonds" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetBonds" UserSourceName="GetBonds">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     OPICSLIVEDEAL.DEALID, OPICSLIVEDEAL.SECURITY, OPICSLIVEDEAL.CCY, OPICSLIVEDEAL.MDATE, OPICSLIVEDEAL.CURFACE, 
                      OPICSLIVEDEAL.ASWPSPRD, OPICSLIVEDEAL.SPREAD, OPICSLIVEDEAL.CUSIP, TradeSensiHist.SecurityClass, TradeSensiHist.SaveDate
FROM         OPICSLIVEDEAL INNER JOIN
                      TradeSensiHist ON OPICSLIVEDEAL.DEALID = TradeSensiHist.TradeID
WHERE     (TradeSensiHist.SaveDate = @Date)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DEALID" DataSetColumn="DEALID" />
              <Mapping SourceColumn="SECURITY" DataSetColumn="SECURITY" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="MDATE" DataSetColumn="MDATE" />
              <Mapping SourceColumn="CURFACE" DataSetColumn="CURFACE" />
              <Mapping SourceColumn="ASWPSPRD" DataSetColumn="ASWPSPRD" />
              <Mapping SourceColumn="SPREAD" DataSetColumn="SPREAD" />
              <Mapping SourceColumn="CUSIP" DataSetColumn="CUSIP" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BondCovenantsTableAdapter" GeneratorDataComponentClassName="BondCovenantsTableAdapter" Name="BondCovenants" UserDataComponentName="BondCovenantsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetBondCovenants" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetBondCovenants" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetBondCovenants" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     BOND_Covenants.CUSIP, BOND_Covenants.STEP_UP_DOWN_PROVISION, BOND_Covenants.STEP_UP_DOWN_PROVISION_TRIGGER, 
                      BOND_Covenants.CHNG_OF_CONTROL_COVENANT, BOND_Covenants.RATINGS_TRIGGER_PROVISION, BOND_Covenants.CALLABLE, 
                      BOND_Covenants.CALL_FEATURE, BOND_Covenants.NXT_CALL_DT, BOND_Covenants.MAKE_WHOLE_CALL, TradeSensiHist.CCY, 
                      TradeSensiHist.CurrentOutstanding, TradeSensiHist.MaturityDate, TradeSensiHist.SecurityClass, TradeSensiHist.SaveDate, TradeSensiHist.TICKER, 
                      [Security Master].Security AS Expr1
FROM         BOND_Covenants INNER JOIN
                      OPICSLIVEDEAL ON BOND_Covenants.CUSIP = OPICSLIVEDEAL.CUSIP INNER JOIN
                      TradeSensiHist ON OPICSLIVEDEAL.DEALID = TradeSensiHist.TradeID INNER JOIN
                      [Security Master] ON BOND_Covenants.CUSIP = [Security Master].CUSIP
WHERE     (TradeSensiHist.SaveDate = @Date)
ORDER BY TradeSensiHist.TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CUSIP" DataSetColumn="CUSIP" />
              <Mapping SourceColumn="STEP_UP_DOWN_PROVISION" DataSetColumn="STEP_UP_DOWN_PROVISION" />
              <Mapping SourceColumn="STEP_UP_DOWN_PROVISION_TRIGGER" DataSetColumn="STEP_UP_DOWN_PROVISION_TRIGGER" />
              <Mapping SourceColumn="CHNG_OF_CONTROL_COVENANT" DataSetColumn="CHNG_OF_CONTROL_COVENANT" />
              <Mapping SourceColumn="RATINGS_TRIGGER_PROVISION" DataSetColumn="RATINGS_TRIGGER_PROVISION" />
              <Mapping SourceColumn="CALLABLE" DataSetColumn="CALLABLE" />
              <Mapping SourceColumn="CALL_FEATURE" DataSetColumn="CALL_FEATURE" />
              <Mapping SourceColumn="NXT_CALL_DT" DataSetColumn="NXT_CALL_DT" />
              <Mapping SourceColumn="MAKE_WHOLE_CALL" DataSetColumn="MAKE_WHOLE_CALL" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="CurrentOutstanding" DataSetColumn="CurrentOutstanding" />
              <Mapping SourceColumn="MaturityDate" DataSetColumn="MaturityDate" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CDSCurveSpreadTableAdapter" GeneratorDataComponentClassName="CDSCurveSpreadTableAdapter" Name="CDSCurveSpread" UserDataComponentName="CDSCurveSpreadTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetCDSCurveStats" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetCDSCurveStats" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetCDSCurveStats" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CDSTODAY.TICKER, CDSTODAY._5Y, AVG(mpCDSCurve._7Y - mpCDSCurve._5Y) AS AVG57, STDEV(mpCDSCurve._7Y - mpCDSCurve._5Y) 
                      AS STDev57, CDSTODAY.Tier, CDSTODAY.CCY, CDSTODAY.DocClause, CDSTODAY._7Y, CDSTODAY._10Y, 
                      (CDSTODAY._7Y - CDSTODAY._5Y - AVG(mpCDSCurve._7Y - mpCDSCurve._5Y)) / CASE ABS(STDEV(mpCDSCurve._7Y - mpCDSCurve._5Y)) 
                      WHEN 0 THEN 1 ELSE ABS(STDEV(mpCDSCurve._7Y - mpCDSCurve._5Y)) END AS ZSCORE57, CDSTODAY._7Y - CDSTODAY._5Y AS Cruve57, 
                      CDSTODAY._10Y - CDSTODAY._5Y AS Curve105, AVG(mpCDSCurve._10Y - mpCDSCurve._5Y) AS Avg105, 
                      STDEV(mpCDSCurve._10Y - mpCDSCurve._5Y) AS StDev105, (CDSTODAY._10Y - CDSTODAY._5Y - AVG(mpCDSCurve._10Y - mpCDSCurve._5Y)) 
                      / CASE ABS(STDEV(mpCDSCurve._10Y - mpCDSCurve._5Y)) WHEN 0 THEN 1 ELSE ABS(STDEV(mpCDSCurve._10Y - mpCDSCurve._5Y)) 
                      END AS ZScore105, mpCDSCurve.AvRating, mpCDSCurve.Country
FROM         CDSTODAY INNER JOIN
                      mpCDSCurve ON CDSTODAY.TICKER = mpCDSCurve.TICKER
WHERE     (mpCDSCurve.EvalDate &gt; DATEADD(year, - 1, GETDATE())) AND (mpCDSCurve._5Y &gt; 0)
GROUP BY CDSTODAY.TICKER, CDSTODAY._5Y, CDSTODAY.Tier, CDSTODAY.CCY, CDSTODAY.DocClause, CDSTODAY._7Y, CDSTODAY._10Y, 
                      CDSTODAY._10Y - CDSTODAY._5Y, CDSTODAY._7Y - CDSTODAY._5Y, mpCDSCurve.AvRating, mpCDSCurve.Country
HAVING      (STDEV(mpCDSCurve._5Y) &lt;&gt; 0) AND (CDSTODAY.Tier = N'SNRFOR') AND (CDSTODAY.CCY = N'USD') AND (mpCDSCurve.AvRating = N'AAA' OR
                      mpCDSCurve.AvRating = N'BBB') AND (mpCDSCurve.Country = N'United States')
ORDER BY CDSTODAY.TICKER</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="Tier" DataSetColumn="Tier" />
              <Mapping SourceColumn="CCY" DataSetColumn="CCY" />
              <Mapping SourceColumn="DocClause" DataSetColumn="DocClause" />
              <Mapping SourceColumn="_5Y" DataSetColumn="_5Y" />
              <Mapping SourceColumn="_7Y" DataSetColumn="_7Y" />
              <Mapping SourceColumn="_10Y" DataSetColumn="_10Y" />
              <Mapping SourceColumn="AVG57" DataSetColumn="AVG57" />
              <Mapping SourceColumn="STDev57" DataSetColumn="STDev57" />
              <Mapping SourceColumn="ZSCORE57" DataSetColumn="ZSCORE57" />
              <Mapping SourceColumn="Cruve57" DataSetColumn="Cruve57" />
              <Mapping SourceColumn="Curve105" DataSetColumn="Curve105" />
              <Mapping SourceColumn="Avg105" DataSetColumn="Avg105" />
              <Mapping SourceColumn="StDev105" DataSetColumn="StDev105" />
              <Mapping SourceColumn="ZScore105" DataSetColumn="ZScore105" />
              <Mapping SourceColumn="AvRating" DataSetColumn="AvRating" />
              <Mapping SourceColumn="Country" DataSetColumn="Country" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDatabyTicker" GetMethodModifier="Public" GetMethodName="GetDatabyTicker" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDatabyTicker" UserSourceName="GetDatabyTicker">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CDSTODAY.TICKER, CDSTODAY._5Y, AVG(mpCDSCurve._7Y - mpCDSCurve._5Y) AS AVG57, STDEV(mpCDSCurve._7Y - mpCDSCurve._5Y) 
                      AS STDev57, CDSTODAY.Tier, CDSTODAY.CCY, CDSTODAY.DocClause, CDSTODAY._7Y, CDSTODAY._10Y, 
                      (CDSTODAY._7Y - CDSTODAY._5Y - AVG(mpCDSCurve._7Y - mpCDSCurve._5Y)) / CASE ABS(STDEV(mpCDSCurve._7Y - mpCDSCurve._5Y)) 
                      WHEN 0 THEN 1 ELSE ABS(STDEV(mpCDSCurve._7Y - mpCDSCurve._5Y)) END AS ZSCORE57, CDSTODAY._7Y - CDSTODAY._5Y AS Cruve57, 
                      CDSTODAY._10Y - CDSTODAY._5Y AS Curve105, AVG(mpCDSCurve._10Y - mpCDSCurve._5Y) AS Avg105, 
                      STDEV(mpCDSCurve._10Y - mpCDSCurve._5Y) AS StDev105, (CDSTODAY._10Y - CDSTODAY._5Y - AVG(mpCDSCurve._10Y - mpCDSCurve._5Y)) 
                      / CASE ABS(STDEV(mpCDSCurve._10Y - mpCDSCurve._5Y)) WHEN 0 THEN 1 ELSE ABS(STDEV(mpCDSCurve._10Y - mpCDSCurve._5Y)) 
                      END AS ZScore105, mpCDSCurve.Country, CDSTODAY.ShortName
FROM         CDSTODAY INNER JOIN
                      mpCDSCurve ON CDSTODAY.TICKER = mpCDSCurve.TICKER
WHERE     (mpCDSCurve.EvalDate &gt; DATEADD(year, - 1, GETDATE())) AND (mpCDSCurve._5Y &gt; 0)
GROUP BY CDSTODAY.TICKER, CDSTODAY._5Y, CDSTODAY.Tier, CDSTODAY.CCY, CDSTODAY.DocClause, CDSTODAY._7Y, CDSTODAY._10Y, 
                      CDSTODAY._10Y - CDSTODAY._5Y, CDSTODAY._7Y - CDSTODAY._5Y, mpCDSCurve.Country, CDSTODAY.ShortName
HAVING      (STDEV(mpCDSCurve._5Y) &lt;&gt; 0) AND (CDSTODAY.Tier = N'SNRFOR') AND (CDSTODAY.CCY = N'USD') AND (mpCDSCurve.Country = N'United States') 
                      AND (CDSTODAY.TICKER = @Ticker)
ORDER BY CDSTODAY.TICKER</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Ticker" ColumnName="TICKER" DataSourceName="CreditNet.dbo.CDSTODAY" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@Ticker" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="TICKER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.mpCDSCurve" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetSlopHistory" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetSlopHistory" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetSlopHistory" UserSourceName="GetSlopHistory">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     _7Y - _5Y AS Slope57, EvalDate, TICKER, _10Y - _5Y AS Slope510
FROM         mpCDSCurve
WHERE     (EvalDate &gt; DATEADD(year, - 1, GETDATE()))
GROUP BY EvalDate, TICKER, _7Y - _5Y, _10Y - _5Y
HAVING      (TICKER = @Ticker)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Ticker" ColumnName="TICKER" DataSourceName="CreditNet.dbo.mpCDSCurve" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@Ticker" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="TICKER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MissingSectorTableAdapter" GeneratorDataComponentClassName="MissingSectorTableAdapter" Name="MissingSector" UserDataComponentName="MissingSectorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetMissingSector" GetMethodModifier="Public" GetMethodName="GetMissingSector" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetMissingSector" UserSourceName="GetMissingSector">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeSensiHist.SaveDate, TradeSensiHist.TradeID, TradeSensiHist.TICKER, SectorMaster.IndustrySubDesignations, 
                      TradeSensiHist.SecurityClass
FROM         TradeSensiHist LEFT OUTER JOIN
                      SectorMaster ON TradeSensiHist.TICKER = SectorMaster.Ticker
WHERE     (TradeSensiHist.SaveDate = @date) AND (TradeSensiHist.SecurityClass = 'CDS' OR
                      TradeSensiHist.SecurityClass = 'CORP') AND (SectorMaster.IndustrySubDesignations IS NULL)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SaveDate" DataSetColumn="SaveDate" />
              <Mapping SourceColumn="TradeID" DataSetColumn="TradeID" />
              <Mapping SourceColumn="TICKER" DataSetColumn="TICKER" />
              <Mapping SourceColumn="IndustrySubDesignations" DataSetColumn="IndustrySubDesignations" />
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RMBSTradeSensi2TableAdapter" GeneratorDataComponentClassName="RMBSTradeSensi2TableAdapter" Name="RMBSTradeSensi2" UserDataComponentName="RMBSTradeSensi2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataSS" GetMethodModifier="Public" GetMethodName="GetDataSS" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataSS" UserSourceName="GetDataSS">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count
FROM         TradeSensiHist
WHERE savedate = @savedate AND WRAP = 'N/A' AND right(securitysubclass, 3) = ' SS'
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE 'RMBS%' )
ORDER BY SecurityClass DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="savedate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@savedate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SecurityClass" DataSetColumn="SecurityClass" />
              <Mapping SourceColumn="SecuritySubClass" DataSetColumn="SecuritySubClass" />
              <Mapping SourceColumn="Wrap" DataSetColumn="Wrap" />
              <Mapping SourceColumn="Outstanding" DataSetColumn="Outstanding" />
              <Mapping SourceColumn="CreditBPV" DataSetColumn="CreditBPV" />
              <Mapping SourceColumn="WAL" DataSetColumn="WAL" />
              <Mapping SourceColumn="Count" DataSetColumn="Count" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataWRAP" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataWRAP" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataWRAP" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass,  CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count
  
FROM         TradeSensiHist
WHERE savedate = @savedate AND WRAP &lt;&gt; 'N/A' 
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE 'RMBS%' )
ORDER BY SecurityClass DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="savedate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@savedate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataAAA" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetDataAAA" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataAAA" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass,  CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count
  
FROM         TradeSensiHist
WHERE savedate = @savedate AND WRAP = 'N/A' AND right(securitysubclass, 3) = 'AAA'
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE 'RMBS%' )
ORDER BY SecurityClass DESC
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="savedate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@savedate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.TradeSensiHist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy2" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataAA" GeneratorSourceName="FillBy2" GetMethodModifier="Public" GetMethodName="GetDataAA" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataAA" UserSourceName="FillBy2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SecurityClass, SecuritySubClass,  CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END AS Wrap, SUM(CurrentOutstanding) AS Outstanding, SUM(CreditBPV) AS CreditBPV, SUM(CAST(DATEDIFF(day, MaturityDate, 
                      GETDATE()) AS decimal(10, 2)) / 365 * CurrentOutstanding) / SUM(CurrentOutstanding) * - 1.0 AS WAL, COUNT(TradeID) AS Count
  
FROM         TradeSensiHist
WHERE savedate = @savedate AND WRAP = 'N/A' AND right(securitysubclass, 3) = ' AA'
GROUP BY SecurityClass, SecuritySubClass, CASE WRAP WHEN 'N/A' THEN 'N/A' ELSE 'WRAP' END
HAVING      (SecurityClass LIKE 'RMBS%' )
ORDER BY SecurityClass DESC
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="savedate" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@savedate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="SaveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RMBSRatingWatchdogReportTableAdapter" GeneratorDataComponentClassName="RMBSRatingWatchdogReportTableAdapter" Name="RMBSRatingWatchdogReport" UserDataComponentName="RMBSRatingWatchdogReportTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString (Web.config)" DbObjectName="CreditNet.dbo.RMBSRatingWatchdogReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataRtgByCUSIP" GetMethodModifier="Public" GetMethodName="GetDataRtgByCUSIP" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataRtgByCUSIP" UserSourceName="GetDataRtgByCUSIP">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT rwr.Date, rwr.CUSIP, rwr.Ticker, rwr.Change, rwr.Rating, rwr.Watch, rwr.[Old rating], rwr.[Old watch], rwr.[Moodys], rwr.[S&amp;P], rwr.[Fitch], rwr.Score
FROM RMBSRatingWatchdogReport rwr
WHERE rwr.deal = (SELECT dealname FROM [Security Master] WHERE CUSIP = @CUSIP)
ORDER BY rwr.Date DESC
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CUSIP" ColumnName="CUSIP" DataSourceName="CreditNet.dbo.RMBSRatingWatchdogReport" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@CUSIP" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="CUSIP" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="CUSIP" DataSetColumn="CUSIP" />
              <Mapping SourceColumn="Ticker" DataSetColumn="Ticker" />
              <Mapping SourceColumn="Change" DataSetColumn="Change" />
              <Mapping SourceColumn="Rating" DataSetColumn="Rating" />
              <Mapping SourceColumn="Watch" DataSetColumn="Watch" />
              <Mapping SourceColumn="Old rating" DataSetColumn="Old rating" />
              <Mapping SourceColumn="Old watch" DataSetColumn="Old watch" />
              <Mapping SourceColumn="Moodys" DataSetColumn="Moodys" />
              <Mapping SourceColumn="S&amp;P" DataSetColumn="S&amp;P" />
              <Mapping SourceColumn="Fitch" DataSetColumn="Fitch" />
              <Mapping SourceColumn="Score" DataSetColumn="Score" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WebLogDailyPageHitsTableAdapter" GeneratorDataComponentClassName="WebLogDailyPageHitsTableAdapter" Name="WebLogDailyPageHits" UserDataComponentName="WebLogDailyPageHitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectName="ASPNETDB.dbo.WebLog" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Page, COUNT(TimeStamp) AS Hits
FROM         WebLog
WHERE     (CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, TimeStamp))) = @thisDate)
GROUP BY Page
ORDER BY Hits DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="thisDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@thisDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Page" DataSetColumn="Page" />
              <Mapping SourceColumn="Hits" DataSetColumn="Hits" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WebLogDailyUserHitsTableAdapter" GeneratorDataComponentClassName="WebLogDailyUserHitsTableAdapter" Name="WebLogDailyUserHits" UserDataComponentName="WebLogDailyUserHitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectName="ASPNETDB.dbo.WebLog" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     UserName, COUNT(TimeStamp) AS Hits
FROM         WebLog
WHERE     (CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, TimeStamp))) = @thisDate)
GROUP BY UserName
ORDER BY Hits DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="thisDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@thisDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Hits" DataSetColumn="Hits" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RMBSPrepayReportTableAdapter" GeneratorDataComponentClassName="RMBSPrepayReportTableAdapter" Name="RMBSPrepayReport" UserDataComponentName="RMBSPrepayReportTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString1 (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     YEAR(OPICSCashFlows.IPAYDATE) AS Year, MONTH(OPICSCashFlows.IPAYDATE) AS Month, SUM(OPICSCashFlows.PPAYAMT) 
                      AS MonthlyPrepay
FROM         OPICSLIVEDEAL INNER JOIN
                      [Security Master] ON OPICSLIVEDEAL.CUSIP = [Security Master].CUSIP INNER JOIN
                      OPICSCashFlows ON OPICSLIVEDEAL.DEALID = OPICSCashFlows.DEALID
WHERE     ([Security Master].SecurityClass LIKE N'RMBS%') AND (OPICSCashFlows.SCHDTYPE &lt;&gt; N'V') AND (OPICSCashFlows.IPAYDATE &lt;= GETDATE())
GROUP BY YEAR(OPICSCashFlows.IPAYDATE), MONTH(OPICSCashFlows.IPAYDATE)
ORDER BY Year, Month</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Month" DataSetColumn="Month" />
              <Mapping SourceColumn="MonthlyPrepay" DataSetColumn="MonthlyPrepay" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CDSNovation DataTableAdapter" GeneratorDataComponentClassName="CDSNovation_DataTableAdapter" Name="CDSNovation Data" UserDataComponentName="CDSNovation DataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CreditNetConnectionString1 (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     LiveCDSTrade.*, TradeSensiHist.SecurityName, TradeSensiHist.SaveDate AS Expr1, TradeSensiHist.CurrentOutstanding, 
                      REDENTITY.EntityName
FROM         LiveCDSTrade INNER JOIN
                      TradeSensiHist ON LiveCDSTrade.NB = TradeSensiHist.TradeID INNER JOIN
                      REDENTITY ON TradeSensiHist.TICKER = REDENTITY.TICKER
WHERE     (TradeSensiHist.SaveDate = @date)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="Expr1" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SAVEDATE" DataSetColumn="SAVEDATE" />
              <Mapping SourceColumn="NB" DataSetColumn="NB" />
              <Mapping SourceColumn="NBEXT" DataSetColumn="NBEXT" />
              <Mapping SourceColumn="PL_INSCUR" DataSetColumn="PL_INSCUR" />
              <Mapping SourceColumn="FAMILY" DataSetColumn="FAMILY" />
              <Mapping SourceColumn="GROUP" DataSetColumn="GROUP" />
              <Mapping SourceColumn="TP_STATUS" DataSetColumn="TP_STATUS" />
              <Mapping SourceColumn="COUNTERPART" DataSetColumn="COUNTERPART" />
              <Mapping SourceColumn="PORTFOLIO" DataSetColumn="PORTFOLIO" />
              <Mapping SourceColumn="BRW_NOM1" DataSetColumn="BRW_NOM1" />
              <Mapping SourceColumn="TRNDATE" DataSetColumn="TRNDATE" />
              <Mapping SourceColumn="MATURITY" DataSetColumn="MATURITY" />
              <Mapping SourceColumn="EXPIRY" DataSetColumn="EXPIRY" />
              <Mapping SourceColumn="VALID" DataSetColumn="VALID" />
              <Mapping SourceColumn="IE" DataSetColumn="IE" />
              <Mapping SourceColumn="INSTRUMENT" DataSetColumn="INSTRUMENT" />
              <Mapping SourceColumn="MARKET INDEX" DataSetColumn="MARKET INDEX" />
              <Mapping SourceColumn="RATE_MARG0" DataSetColumn="RATE_MARG0" />
              <Mapping SourceColumn="B/S" DataSetColumn="B/S" />
              <Mapping SourceColumn="TRADER" DataSetColumn="TRADER" />
              <Mapping SourceColumn="MOP_LAST" DataSetColumn="MOP_LAST" />
              <Mapping SourceColumn="OPT_MOPLST" DataSetColumn="OPT_MOPLST" />
              <Mapping SourceColumn="PayRecvLeg" DataSetColumn="PayRecvLeg" />
              <Mapping SourceColumn="STL_FLW" DataSetColumn="STL_FLW" />
              <Mapping SourceColumn="BRW_SDTE" DataSetColumn="BRW_SDTE" />
              <Mapping SourceColumn="OPT_FLWFST" DataSetColumn="OPT_FLWFST" />
              <Mapping SourceColumn="SecurityName" DataSetColumn="SecurityName" />
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
              <Mapping SourceColumn="CurrentOutstanding" DataSetColumn="CurrentOutstanding" />
              <Mapping SourceColumn="EntityName" DataSetColumn="EntityName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CreditNetConnectionString1 (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     LiveCDSTrade.SAVEDATE, LiveCDSTrade.NB, LiveCDSTrade.NBEXT, LiveCDSTrade.PL_INSCUR, LiveCDSTrade.FAMILY, LiveCDSTrade.[GROUP], 
                      LiveCDSTrade.TP_STATUS, LiveCDSTrade.COUNTERPART, LiveCDSTrade.PORTFOLIO, LiveCDSTrade.BRW_NOM1, LiveCDSTrade.TRNDATE, 
                      LiveCDSTrade.MATURITY, LiveCDSTrade.EXPIRY, LiveCDSTrade.VALID, LiveCDSTrade.IE, LiveCDSTrade.INSTRUMENT, 
                      LiveCDSTrade.[MARKET INDEX], LiveCDSTrade.RATE_MARG0, LiveCDSTrade.[B/S], LiveCDSTrade.TRADER, LiveCDSTrade.MOP_LAST, 
                      LiveCDSTrade.OPT_MOPLST, LiveCDSTrade.PayRecvLeg, LiveCDSTrade.STL_FLW, LiveCDSTrade.BRW_SDTE, LiveCDSTrade.OPT_FLWFST, 
                      TradeSensiHist.SecurityName, TradeSensiHist.SaveDate AS Expr1, TradeSensiHist.CurrentOutstanding, REDENTITY.EntityName
FROM         LiveCDSTrade INNER JOIN
                      TradeSensiHist ON LiveCDSTrade.NB = TradeSensiHist.TradeID INNER JOIN
                      REDENTITY ON TradeSensiHist.TICKER = REDENTITY.TICKER
WHERE     (TradeSensiHist.SaveDate = @date) AND (LiveCDSTrade.NB = @TradeNB)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="date" ColumnName="SaveDate" DataSourceName="CreditNet.dbo.TradeSensiHist" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@date" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="Expr1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TradeNB" ColumnName="NB" DataSourceName="CreditNet.dbo.LiveCDSTrade" DataTypeServer="nvarchar(10)" DbType="String" Direction="Input" ParameterName="@TradeNB" Precision="0" ProviderType="NVarChar" Scale="0" Size="10" SourceColumn="NB" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WebLogTableAdapter" GeneratorDataComponentClassName="WebLogTableAdapter" Name="WebLog" UserDataComponentName="WebLogTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectName="ASPNETDB.dbo.WebLog" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [WEBLOG] WHERE (([TimeStamp] = @Original_TimeStamp) AND ([UserName] = @Original_UserName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_TimeStamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TimeStamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [WEBLOG] ([TimeStamp], [UserName], [UserHostAddress], [Page]) VALUES (@TimeStamp, @UserName, @UserHostAddress, @Page)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@TimeStamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TimeStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserHostAddress" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserHostAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Page" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Page" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select * from WEBLOG</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [WEBLOG] SET [TimeStamp] = @TimeStamp, [UserName] = @UserName, [UserHostAddress] = @UserHostAddress, [Page] = @Page WHERE (([TimeStamp] = @Original_TimeStamp) AND ([UserName] = @Original_UserName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@TimeStamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TimeStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserHostAddress" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserHostAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Page" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Page" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_TimeStamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TimeStamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TimeStamp" DataSetColumn="TimeStamp" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="UserHostAddress" DataSetColumn="UserHostAddress" />
              <Mapping SourceColumn="Page" DataSetColumn="Page" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CountAll" Modifier="Public" Name="CountAll" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="CountAll">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     COUNT(*) AS RecordCount
FROM         WebLog</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CountDaily" Modifier="Public" Name="CountDaily" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="CountDaily">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     COUNT(*) AS DailyCount
FROM         WebLog
WHERE     (CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, TimeStamp))) = @thisDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="thisDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@thisDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectName="ASPNETDB.dbo.WebLog" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByDate" GetMethodModifier="Public" GetMethodName="GetDataByDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByDate" UserSourceName="GetDataByDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Page, TimeStamp, UserHostAddress, UserName FROM WebLog WHERE (CONVERT (DATETIME, FLOOR(CONVERT (FLOAT, TimeStamp))) = @thisDate) ORDER BY TimeStamp DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="thisDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@thisDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectName="ASPNETDB.dbo.WebLog" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetPageHitsByDate" GetMethodModifier="Public" GetMethodName="GetPageHitsByDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetPageHitsByDate" UserSourceName="GetPageHitsByDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Page, TimeStamp, UserHostAddress, UserName FROM WebLog WHERE (CONVERT (DATETIME, FLOOR(CONVERT (FLOAT, TimeStamp))) = @thisDate) AND (Page = @PageName) ORDER BY TimeStamp DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="thisDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@thisDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="PageName" ColumnName="Page" DataSourceName="ASPNETDB.dbo.WebLog" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@PageName" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="Page" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ASPNETDBConnectionString (Web.config)" DbObjectName="ASPNETDB.dbo.WebLog" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetUserHitsByDate" GetMethodModifier="Public" GetMethodName="GetUserHitsByDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetUserHitsByDate" UserSourceName="GetUserHitsByDate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Page, TimeStamp, UserHostAddress, UserName FROM WebLog WHERE (CONVERT (DATETIME, FLOOR(CONVERT (FLOAT, TimeStamp))) = @thisDate) AND (UserName = @UserName) ORDER BY TimeStamp DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="thisDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@thisDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserName" ColumnName="UserName" DataSourceName="ASPNETDB.dbo.WebLog" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetReports" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSetReports" msprop:Generator_DataSetName="DataSetReports">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TradeSensiHist" msprop:Generator_UserTableName="TradeSensiHist" msprop:Generator_RowDeletedName="TradeSensiHistRowDeleted" msprop:Generator_RowChangedName="TradeSensiHistRowChanged" msprop:Generator_RowClassName="TradeSensiHistRow" msprop:Generator_RowChangingName="TradeSensiHistRowChanging" msprop:Generator_RowEvArgName="TradeSensiHistRowChangeEvent" msprop:Generator_RowEvHandlerName="TradeSensiHistRowChangeEventHandler" msprop:Generator_TableClassName="TradeSensiHistDataTable" msprop:Generator_TableVarName="tableTradeSensiHist" msprop:Generator_RowDeletingName="TradeSensiHistRowDeleting" msprop:Generator_TablePropName="TradeSensiHist">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TradeType" msprop:Generator_UserColumnName="TradeType" msprop:Generator_ColumnVarNameInTable="columnTradeType" msprop:Generator_ColumnPropNameInRow="TradeType" msprop:Generator_ColumnPropNameInTable="TradeTypeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TradeID" msprop:Generator_UserColumnName="TradeID" msprop:Generator_ColumnVarNameInTable="columnTradeID" msprop:Generator_ColumnPropNameInRow="TradeID" msprop:Generator_ColumnPropNameInTable="TradeIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnPropNameInTable="CCYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Maturity" msprop:Generator_UserColumnName="Maturity" msprop:Generator_ColumnVarNameInTable="columnMaturity" msprop:Generator_ColumnPropNameInRow="Maturity" msprop:Generator_ColumnPropNameInTable="MaturityColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="AMOUNT" msprop:Generator_UserColumnName="AMOUNT" msprop:Generator_ColumnVarNameInTable="columnAMOUNT" msprop:Generator_ColumnPropNameInRow="AMOUNT" msprop:Generator_ColumnPropNameInTable="AMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CREDITBPV" msprop:Generator_UserColumnName="CREDITBPV" msprop:Generator_ColumnVarNameInTable="columnCREDITBPV" msprop:Generator_ColumnPropNameInRow="CREDITBPV" msprop:Generator_ColumnPropNameInTable="CREDITBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDCREDITBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDCREDITBPV" msprop:Generator_ColumnVarNameInTable="columnUSDCREDITBPV" msprop:Generator_ColumnPropNameInRow="USDCREDITBPV" msprop:Generator_ColumnPropNameInTable="USDCREDITBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Spread" msprop:Generator_UserColumnName="Spread" msprop:Generator_ColumnVarNameInTable="columnSpread" msprop:Generator_ColumnPropNameInRow="Spread" msprop:Generator_ColumnPropNameInTable="SpreadColumn" type="xs:double" minOccurs="0" />
              <xs:element name="MTMSpread" msprop:Generator_UserColumnName="MTMSpread" msprop:Generator_ColumnVarNameInTable="columnMTMSpread" msprop:Generator_ColumnPropNameInRow="MTMSpread" msprop:Generator_ColumnPropNameInTable="MTMSpreadColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TKRbyDate" msprop:Generator_UserTableName="TKRbyDate" msprop:Generator_RowDeletedName="TKRbyDateRowDeleted" msprop:Generator_RowChangedName="TKRbyDateRowChanged" msprop:Generator_RowClassName="TKRbyDateRow" msprop:Generator_RowChangingName="TKRbyDateRowChanging" msprop:Generator_RowEvArgName="TKRbyDateRowChangeEvent" msprop:Generator_RowEvHandlerName="TKRbyDateRowChangeEventHandler" msprop:Generator_TableClassName="TKRbyDateDataTable" msprop:Generator_TableVarName="tableTKRbyDate" msprop:Generator_RowDeletingName="TKRbyDateRowDeleting" msprop:Generator_TablePropName="TKRbyDate">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TradeSensiHistClass" msprop:Generator_UserTableName="TradeSensiHistClass" msprop:Generator_RowDeletedName="TradeSensiHistClassRowDeleted" msprop:Generator_RowChangedName="TradeSensiHistClassRowChanged" msprop:Generator_RowClassName="TradeSensiHistClassRow" msprop:Generator_RowChangingName="TradeSensiHistClassRowChanging" msprop:Generator_RowEvArgName="TradeSensiHistClassRowChangeEvent" msprop:Generator_RowEvHandlerName="TradeSensiHistClassRowChangeEventHandler" msprop:Generator_TableClassName="TradeSensiHistClassDataTable" msprop:Generator_TableVarName="tableTradeSensiHistClass" msprop:Generator_RowDeletingName="TradeSensiHistClassRowDeleting" msprop:Generator_TablePropName="TradeSensiHistClass">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TradeType" msprop:Generator_UserColumnName="TradeType" msprop:Generator_ColumnVarNameInTable="columnTradeType" msprop:Generator_ColumnPropNameInRow="TradeType" msprop:Generator_ColumnPropNameInTable="TradeTypeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TradeID" msprop:Generator_UserColumnName="TradeID" msprop:Generator_ColumnVarNameInTable="columnTradeID" msprop:Generator_ColumnPropNameInRow="TradeID" msprop:Generator_ColumnPropNameInTable="TradeIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnPropNameInTable="CCYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Maturity" msprop:Generator_UserColumnName="Maturity" msprop:Generator_ColumnVarNameInTable="columnMaturity" msprop:Generator_ColumnPropNameInRow="Maturity" msprop:Generator_ColumnPropNameInTable="MaturityColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="AMOUNT" msprop:Generator_UserColumnName="AMOUNT" msprop:Generator_ColumnVarNameInTable="columnAMOUNT" msprop:Generator_ColumnPropNameInRow="AMOUNT" msprop:Generator_ColumnPropNameInTable="AMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreditBPV" msprop:Generator_UserColumnName="CreditBPV" msprop:Generator_ColumnVarNameInTable="columnCreditBPV" msprop:Generator_ColumnPropNameInRow="CreditBPV" msprop:Generator_ColumnPropNameInTable="CreditBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RptAssetClassExpByDate" msprop:Generator_UserTableName="RptAssetClassExpByDate" msprop:Generator_RowDeletedName="RptAssetClassExpByDateRowDeleted" msprop:Generator_RowChangedName="RptAssetClassExpByDateRowChanged" msprop:Generator_RowClassName="RptAssetClassExpByDateRow" msprop:Generator_RowChangingName="RptAssetClassExpByDateRowChanging" msprop:Generator_RowEvArgName="RptAssetClassExpByDateRowChangeEvent" msprop:Generator_RowEvHandlerName="RptAssetClassExpByDateRowChangeEventHandler" msprop:Generator_TableClassName="RptAssetClassExpByDateDataTable" msprop:Generator_TableVarName="tableRptAssetClassExpByDate" msprop:Generator_RowDeletingName="RptAssetClassExpByDateRowDeleting" msprop:Generator_TablePropName="RptAssetClassExpByDate">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDCREDITBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDCREDITBPV" msprop:Generator_ColumnPropNameInRow="USDCREDITBPV" msprop:Generator_ColumnVarNameInTable="columnUSDCREDITBPV" msprop:Generator_ColumnPropNameInTable="USDCREDITBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="TradeCount" msdata:ReadOnly="true" msprop:Generator_UserColumnName="TradeCount" msprop:Generator_ColumnPropNameInRow="TradeCount" msprop:Generator_ColumnVarNameInTable="columnTradeCount" msprop:Generator_ColumnPropNameInTable="TradeCountColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RptAssetClassSummary" msprop:Generator_UserTableName="RptAssetClassSummary" msprop:Generator_RowDeletedName="RptAssetClassSummaryRowDeleted" msprop:Generator_RowChangedName="RptAssetClassSummaryRowChanged" msprop:Generator_RowClassName="RptAssetClassSummaryRow" msprop:Generator_RowChangingName="RptAssetClassSummaryRowChanging" msprop:Generator_RowEvArgName="RptAssetClassSummaryRowChangeEvent" msprop:Generator_RowEvHandlerName="RptAssetClassSummaryRowChangeEventHandler" msprop:Generator_TableClassName="RptAssetClassSummaryDataTable" msprop:Generator_TableVarName="tableRptAssetClassSummary" msprop:Generator_RowDeletingName="RptAssetClassSummaryRowDeleting" msprop:Generator_TablePropName="RptAssetClassSummary">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDCREDITBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDCREDITBPV" msprop:Generator_ColumnVarNameInTable="columnUSDCREDITBPV" msprop:Generator_ColumnPropNameInRow="USDCREDITBPV" msprop:Generator_ColumnPropNameInTable="USDCREDITBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="TradeCount" msdata:ReadOnly="true" msprop:Generator_UserColumnName="TradeCount" msprop:Generator_ColumnVarNameInTable="columnTradeCount" msprop:Generator_ColumnPropNameInRow="TradeCount" msprop:Generator_ColumnPropNameInTable="TradeCountColumn" type="xs:int" minOccurs="0" />
              <xs:element name="AssetClass" msprop:Generator_UserColumnName="AssetClass" msprop:Generator_ColumnVarNameInTable="columnAssetClass" msprop:Generator_ColumnPropNameInRow="AssetClass" msprop:Generator_ColumnPropNameInTable="AssetClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CorpExpSectorTableAdapter" msprop:Generator_UserTableName="CorpExpSectorTableAdapter" msprop:Generator_RowDeletedName="CorpExpSectorTableAdapterRowDeleted" msprop:Generator_RowChangedName="CorpExpSectorTableAdapterRowChanged" msprop:Generator_RowClassName="CorpExpSectorTableAdapterRow" msprop:Generator_RowChangingName="CorpExpSectorTableAdapterRowChanging" msprop:Generator_RowEvArgName="CorpExpSectorTableAdapterRowChangeEvent" msprop:Generator_RowEvHandlerName="CorpExpSectorTableAdapterRowChangeEventHandler" msprop:Generator_TableClassName="CorpExpSectorTableAdapterDataTable" msprop:Generator_TableVarName="tableCorpExpSectorTableAdapter" msprop:Generator_RowDeletingName="CorpExpSectorTableAdapterRowDeleting" msprop:Generator_TablePropName="CorpExpSectorTableAdapter">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnPropNameInTable="CCYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CurrentOutstanding" msprop:Generator_UserColumnName="CurrentOutstanding" msprop:Generator_ColumnVarNameInTable="columnCurrentOutstanding" msprop:Generator_ColumnPropNameInRow="CurrentOutstanding" msprop:Generator_ColumnPropNameInTable="CurrentOutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="MaturityDate" msprop:Generator_UserColumnName="MaturityDate" msprop:Generator_ColumnVarNameInTable="columnMaturityDate" msprop:Generator_ColumnPropNameInRow="MaturityDate" msprop:Generator_ColumnPropNameInTable="MaturityDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Spread" msprop:Generator_UserColumnName="Spread" msprop:Generator_ColumnVarNameInTable="columnSpread" msprop:Generator_ColumnPropNameInRow="Spread" msprop:Generator_ColumnPropNameInTable="SpreadColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDCBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDCBPV" msprop:Generator_ColumnVarNameInTable="columnUSDCBPV" msprop:Generator_ColumnPropNameInRow="USDCBPV" msprop:Generator_ColumnPropNameInTable="USDCBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IndustrySubDesignations" msprop:Generator_UserColumnName="IndustrySubDesignations" msprop:Generator_ColumnVarNameInTable="columnIndustrySubDesignations" msprop:Generator_ColumnPropNameInRow="IndustrySubDesignations" msprop:Generator_ColumnPropNameInTable="IndustrySubDesignationsColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Sector" msprop:Generator_UserColumnName="Sector" msprop:Generator_ColumnVarNameInTable="columnSector" msprop:Generator_ColumnPropNameInRow="Sector" msprop:Generator_ColumnPropNameInTable="SectorColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IndustryDesignations" msprop:Generator_UserColumnName="IndustryDesignations" msprop:Generator_ColumnVarNameInTable="columnIndustryDesignations" msprop:Generator_ColumnPropNameInRow="IndustryDesignations" msprop:Generator_ColumnPropNameInTable="IndustryDesignationsColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="TradeStatus" msprop:Generator_UserColumnName="TradeStatus" msprop:Generator_ColumnVarNameInTable="columnTradeStatus" msprop:Generator_ColumnPropNameInRow="TradeStatus" msprop:Generator_ColumnPropNameInTable="TradeStatusColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:decimal" minOccurs="0" />
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RptAssetClassRisk" msprop:Generator_UserTableName="RptAssetClassRisk" msprop:Generator_RowDeletedName="RptAssetClassRiskRowDeleted" msprop:Generator_RowChangedName="RptAssetClassRiskRowChanged" msprop:Generator_RowClassName="RptAssetClassRiskRow" msprop:Generator_RowChangingName="RptAssetClassRiskRowChanging" msprop:Generator_RowEvArgName="RptAssetClassRiskRowChangeEvent" msprop:Generator_RowEvHandlerName="RptAssetClassRiskRowChangeEventHandler" msprop:Generator_TableClassName="RptAssetClassRiskDataTable" msprop:Generator_TableVarName="tableRptAssetClassRisk" msprop:Generator_RowDeletingName="RptAssetClassRiskRowDeleting" msprop:Generator_TablePropName="RptAssetClassRisk">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USDCREDITBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDCREDITBPV" msprop:Generator_ColumnPropNameInRow="USDCREDITBPV" msprop:Generator_ColumnVarNameInTable="columnUSDCREDITBPV" msprop:Generator_ColumnPropNameInTable="USDCREDITBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="TradeCount" msdata:ReadOnly="true" msprop:Generator_UserColumnName="TradeCount" msprop:Generator_ColumnPropNameInRow="TradeCount" msprop:Generator_ColumnVarNameInTable="columnTradeCount" msprop:Generator_ColumnPropNameInTable="TradeCountColumn" type="xs:int" minOccurs="0" />
              <xs:element name="Outstanding" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Outstanding" msprop:Generator_ColumnPropNameInRow="Outstanding" msprop:Generator_ColumnVarNameInTable="columnOutstanding" msprop:Generator_ColumnPropNameInTable="OutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Carry" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Carry" msprop:Generator_ColumnPropNameInRow="Carry" msprop:Generator_ColumnVarNameInTable="columnCarry" msprop:Generator_ColumnPropNameInTable="CarryColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SpreadVolBPS" msprop:Generator_UserColumnName="SpreadVolBPS" msprop:Generator_ColumnPropNameInRow="SpreadVolBPS" msprop:Generator_ColumnVarNameInTable="columnSpreadVolBPS" msprop:Generator_ColumnPropNameInTable="SpreadVolBPSColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="VaR_x0020_1SD" msdata:ReadOnly="true" msprop:Generator_UserColumnName="VaR 1SD" msprop:Generator_ColumnPropNameInRow="VaR_1SD" msprop:Generator_ColumnVarNameInTable="columnVaR_1SD" msprop:Generator_ColumnPropNameInTable="VaR_1SDColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WA_x0020_Spread" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WA Spread" msprop:Generator_ColumnPropNameInRow="WA_Spread" msprop:Generator_ColumnVarNameInTable="columnWA_Spread" msprop:Generator_ColumnPropNameInTable="WA_SpreadColumn" type="xs:double" minOccurs="0" />
              <xs:element name="VaR_x0020_2SD" msdata:ReadOnly="true" msprop:Generator_UserColumnName="VaR 2SD" msprop:Generator_ColumnPropNameInRow="VaR_2SD" msprop:Generator_ColumnVarNameInTable="columnVaR_2SD" msprop:Generator_ColumnPropNameInTable="VaR_2SDColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpreadVol" msprop:Generator_UserTableName="SpreadVol" msprop:Generator_RowDeletedName="SpreadVolRowDeleted" msprop:Generator_RowChangedName="SpreadVolRowChanged" msprop:Generator_RowClassName="SpreadVolRow" msprop:Generator_RowChangingName="SpreadVolRowChanging" msprop:Generator_RowEvArgName="SpreadVolRowChangeEvent" msprop:Generator_RowEvHandlerName="SpreadVolRowChangeEventHandler" msprop:Generator_TableClassName="SpreadVolDataTable" msprop:Generator_TableVarName="tableSpreadVol" msprop:Generator_RowDeletingName="SpreadVolRowDeleting" msprop:Generator_TablePropName="SpreadVol">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Ranking" msprop:Generator_UserColumnName="Ranking" msprop:Generator_ColumnPropNameInRow="Ranking" msprop:Generator_ColumnVarNameInTable="columnRanking" msprop:Generator_ColumnPropNameInTable="RankingColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SpreadVolBPS" msprop:Generator_UserColumnName="SpreadVolBPS" msprop:Generator_ColumnPropNameInRow="SpreadVolBPS" msprop:Generator_ColumnVarNameInTable="columnSpreadVolBPS" msprop:Generator_ColumnPropNameInTable="SpreadVolBPSColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RptRMBSbyTICKER" msprop:Generator_UserTableName="RptRMBSbyTICKER" msprop:Generator_RowDeletedName="RptRMBSbyTICKERRowDeleted" msprop:Generator_RowChangedName="RptRMBSbyTICKERRowChanged" msprop:Generator_RowClassName="RptRMBSbyTICKERRow" msprop:Generator_RowChangingName="RptRMBSbyTICKERRowChanging" msprop:Generator_RowEvArgName="RptRMBSbyTICKERRowChangeEvent" msprop:Generator_RowEvHandlerName="RptRMBSbyTICKERRowChangeEventHandler" msprop:Generator_TableClassName="RptRMBSbyTICKERDataTable" msprop:Generator_TableVarName="tableRptRMBSbyTICKER" msprop:Generator_RowDeletingName="RptRMBSbyTICKERRowDeleting" msprop:Generator_TablePropName="RptRMBSbyTICKER">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RMBSTICKERAMT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="RMBSTICKERAMT" msprop:Generator_ColumnVarNameInTable="columnRMBSTICKERAMT" msprop:Generator_ColumnPropNameInRow="RMBSTICKERAMT" msprop:Generator_ColumnPropNameInTable="RMBSTICKERAMTColumn" type="xs:double" minOccurs="0" />
              <xs:element name="RMBSTotal" msdata:ReadOnly="true" msprop:Generator_UserColumnName="RMBSTotal" msprop:Generator_ColumnVarNameInTable="columnRMBSTotal" msprop:Generator_ColumnPropNameInRow="RMBSTotal" msprop:Generator_ColumnPropNameInTable="RMBSTotalColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PortfolioMDY1" msprop:Generator_UserTableName="PortfolioMDY1" msprop:Generator_RowDeletedName="PortfolioMDY1RowDeleted" msprop:Generator_RowChangedName="PortfolioMDY1RowChanged" msprop:Generator_RowClassName="PortfolioMDY1Row" msprop:Generator_RowChangingName="PortfolioMDY1RowChanging" msprop:Generator_RowEvArgName="PortfolioMDY1RowChangeEvent" msprop:Generator_RowEvHandlerName="PortfolioMDY1RowChangeEventHandler" msprop:Generator_TableClassName="PortfolioMDY1DataTable" msprop:Generator_TableVarName="tablePortfolioMDY1" msprop:Generator_RowDeletingName="PortfolioMDY1RowDeleting" msprop:Generator_TablePropName="PortfolioMDY1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RatingMDY" msprop:Generator_UserColumnName="RatingMDY" msprop:Generator_ColumnVarNameInTable="columnRatingMDY" msprop:Generator_ColumnPropNameInRow="RatingMDY" msprop:Generator_ColumnPropNameInTable="RatingMDYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expr1" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Expr1" msprop:Generator_ColumnVarNameInTable="columnExpr1" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_ColumnPropNameInTable="Expr1Column" type="xs:double" minOccurs="0" />
              <xs:element name="SENIORITY" msprop:Generator_UserColumnName="SENIORITY" msprop:Generator_ColumnVarNameInTable="columnSENIORITY" msprop:Generator_ColumnPropNameInRow="SENIORITY" msprop:Generator_ColumnPropNameInTable="SENIORITYColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="USDAMOUNT" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USDAMOUNT" msprop:Generator_ColumnVarNameInTable="columnUSDAMOUNT" msprop:Generator_ColumnPropNameInRow="USDAMOUNT" msprop:Generator_ColumnPropNameInTable="USDAMOUNTColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SectorSpread" msprop:Generator_UserTableName="SectorSpread" msprop:Generator_RowDeletedName="SectorSpreadRowDeleted" msprop:Generator_RowChangedName="SectorSpreadRowChanged" msprop:Generator_RowClassName="SectorSpreadRow" msprop:Generator_RowChangingName="SectorSpreadRowChanging" msprop:Generator_RowEvArgName="SectorSpreadRowChangeEvent" msprop:Generator_RowEvHandlerName="SectorSpreadRowChangeEventHandler" msprop:Generator_TableClassName="SectorSpreadDataTable" msprop:Generator_TableVarName="tableSectorSpread" msprop:Generator_RowDeletingName="SectorSpreadRowDeleting" msprop:Generator_TablePropName="SectorSpread">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="WA_x0020_SPREAD" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WA SPREAD" msprop:Generator_ColumnVarNameInTable="columnWA_SPREAD" msprop:Generator_ColumnPropNameInRow="WA_SPREAD" msprop:Generator_ColumnPropNameInTable="WA_SPREADColumn" type="xs:double" minOccurs="0" />
              <xs:element name="IndustrySubDesignations" msprop:Generator_UserColumnName="IndustrySubDesignations" msprop:Generator_ColumnVarNameInTable="columnIndustrySubDesignations" msprop:Generator_ColumnPropNameInRow="IndustrySubDesignations" msprop:Generator_ColumnPropNameInTable="IndustrySubDesignationsColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="USD_x0020_OS" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USD OS" msprop:Generator_ColumnVarNameInTable="columnUSD_OS" msprop:Generator_ColumnPropNameInRow="USD_OS" msprop:Generator_ColumnPropNameInTable="USD_OSColumn" type="xs:double" minOccurs="0" />
              <xs:element name="USD_x0020_BPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="USD BPV" msprop:Generator_ColumnVarNameInTable="columnUSD_BPV" msprop:Generator_ColumnPropNameInRow="USD_BPV" msprop:Generator_ColumnPropNameInTable="USD_BPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="mpCDSCurve" msprop:Generator_UserTableName="mpCDSCurve" msprop:Generator_RowDeletedName="mpCDSCurveRowDeleted" msprop:Generator_RowChangedName="mpCDSCurveRowChanged" msprop:Generator_RowClassName="mpCDSCurveRow" msprop:Generator_RowChangingName="mpCDSCurveRowChanging" msprop:Generator_RowEvArgName="mpCDSCurveRowChangeEvent" msprop:Generator_RowEvHandlerName="mpCDSCurveRowChangeEventHandler" msprop:Generator_TableClassName="mpCDSCurveDataTable" msprop:Generator_TableVarName="tablempCDSCurve" msprop:Generator_RowDeletingName="mpCDSCurveRowDeleting" msprop:Generator_TablePropName="mpCDSCurve">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EvalDate" msprop:Generator_UserColumnName="EvalDate" msprop:Generator_ColumnVarNameInTable="columnEvalDate" msprop:Generator_ColumnPropNameInRow="EvalDate" msprop:Generator_ColumnPropNameInTable="EvalDateColumn" type="xs:dateTime" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Tier" msprop:Generator_UserColumnName="Tier" msprop:Generator_ColumnVarNameInTable="columnTier" msprop:Generator_ColumnPropNameInRow="Tier" msprop:Generator_ColumnPropNameInTable="TierColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnPropNameInTable="CCYColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DocClause" msprop:Generator_UserColumnName="DocClause" msprop:Generator_ColumnVarNameInTable="columnDocClause" msprop:Generator_ColumnPropNameInRow="DocClause" msprop:Generator_ColumnPropNameInTable="DocClauseColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="_5Y" msprop:Generator_UserColumnName="_5Y" msprop:Generator_ColumnVarNameInTable="column_5Y" msprop:Generator_ColumnPropNameInRow="_5Y" msprop:Generator_ColumnPropNameInTable="_5YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_4Y" msprop:Generator_UserColumnName="_4Y" msprop:Generator_ColumnVarNameInTable="column_4Y" msprop:Generator_ColumnPropNameInRow="_4Y" msprop:Generator_ColumnPropNameInTable="_4YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_3Y" msprop:Generator_UserColumnName="_3Y" msprop:Generator_ColumnVarNameInTable="column_3Y" msprop:Generator_ColumnPropNameInRow="_3Y" msprop:Generator_ColumnPropNameInTable="_3YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_2Y" msprop:Generator_UserColumnName="_2Y" msprop:Generator_ColumnVarNameInTable="column_2Y" msprop:Generator_ColumnPropNameInRow="_2Y" msprop:Generator_ColumnPropNameInTable="_2YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_1Y" msprop:Generator_UserColumnName="_1Y" msprop:Generator_ColumnVarNameInTable="column_1Y" msprop:Generator_ColumnPropNameInRow="_1Y" msprop:Generator_ColumnPropNameInTable="_1YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_7Y" msprop:Generator_UserColumnName="_7Y" msprop:Generator_ColumnVarNameInTable="column_7Y" msprop:Generator_ColumnPropNameInRow="_7Y" msprop:Generator_ColumnPropNameInTable="_7YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_15Y" msprop:Generator_UserColumnName="_15Y" msprop:Generator_ColumnVarNameInTable="column_15Y" msprop:Generator_ColumnPropNameInRow="_15Y" msprop:Generator_ColumnPropNameInTable="_15YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_10Y" msprop:Generator_UserColumnName="_10Y" msprop:Generator_ColumnVarNameInTable="column_10Y" msprop:Generator_ColumnPropNameInRow="_10Y" msprop:Generator_ColumnPropNameInTable="_10YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_20Y" msprop:Generator_UserColumnName="_20Y" msprop:Generator_ColumnVarNameInTable="column_20Y" msprop:Generator_ColumnPropNameInRow="_20Y" msprop:Generator_ColumnPropNameInTable="_20YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_30Y" msprop:Generator_UserColumnName="_30Y" msprop:Generator_ColumnVarNameInTable="column_30Y" msprop:Generator_ColumnPropNameInRow="_30Y" msprop:Generator_ColumnPropNameInTable="_30YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Recovery" msprop:Generator_UserColumnName="Recovery" msprop:Generator_ColumnVarNameInTable="columnRecovery" msprop:Generator_ColumnPropNameInRow="Recovery" msprop:Generator_ColumnPropNameInTable="RecoveryColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_6m" msprop:Generator_UserColumnName="_6m" msprop:Generator_ColumnVarNameInTable="column_6m" msprop:Generator_ColumnPropNameInRow="_6m" msprop:Generator_ColumnPropNameInTable="_6mColumn" type="xs:double" minOccurs="0" />
              <xs:element name="AvRating" msprop:Generator_UserColumnName="AvRating" msprop:Generator_ColumnVarNameInTable="columnAvRating" msprop:Generator_ColumnPropNameInRow="AvRating" msprop:Generator_ColumnPropNameInTable="AvRatingColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Country" msprop:Generator_UserColumnName="Country" msprop:Generator_ColumnVarNameInTable="columnCountry" msprop:Generator_ColumnPropNameInRow="Country" msprop:Generator_ColumnPropNameInTable="CountryColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Region" msprop:Generator_UserColumnName="Region" msprop:Generator_ColumnVarNameInTable="columnRegion" msprop:Generator_ColumnPropNameInRow="_Region" msprop:Generator_ColumnPropNameInTable="RegionColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Sector" msprop:Generator_UserColumnName="Sector" msprop:Generator_ColumnVarNameInTable="columnSector" msprop:Generator_ColumnPropNameInRow="Sector" msprop:Generator_ColumnPropNameInTable="SectorColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Depth" msprop:Generator_UserColumnName="Depth" msprop:Generator_ColumnVarNameInTable="columnDepth" msprop:Generator_ColumnPropNameInRow="Depth" msprop:Generator_ColumnPropNameInTable="DepthColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CDSTODAY" msprop:Generator_UserTableName="CDSTODAY" msprop:Generator_RowDeletedName="CDSTODAYRowDeleted" msprop:Generator_RowChangedName="CDSTODAYRowChanged" msprop:Generator_RowClassName="CDSTODAYRow" msprop:Generator_RowChangingName="CDSTODAYRowChanging" msprop:Generator_RowEvArgName="CDSTODAYRowChangeEvent" msprop:Generator_RowEvHandlerName="CDSTODAYRowChangeEventHandler" msprop:Generator_TableClassName="CDSTODAYDataTable" msprop:Generator_TableVarName="tableCDSTODAY" msprop:Generator_RowDeletingName="CDSTODAYRowDeleting" msprop:Generator_TablePropName="CDSTODAY">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="_5Y" msprop:Generator_UserColumnName="_5Y" msprop:Generator_ColumnVarNameInTable="column_5Y" msprop:Generator_ColumnPropNameInRow="_5Y" msprop:Generator_ColumnPropNameInTable="_5YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="AVG" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AVG" msprop:Generator_ColumnPropNameInRow="AVG" msprop:Generator_ColumnVarNameInTable="columnAVG" msprop:Generator_ColumnPropNameInTable="AVGColumn" type="xs:double" minOccurs="0" />
              <xs:element name="ZSCORE" msdata:ReadOnly="true" msprop:Generator_UserColumnName="ZSCORE" msprop:Generator_ColumnPropNameInRow="ZSCORE" msprop:Generator_ColumnVarNameInTable="columnZSCORE" msprop:Generator_ColumnPropNameInTable="ZSCOREColumn" type="xs:double" minOccurs="0" />
              <xs:element name="STDev" msdata:ReadOnly="true" msprop:Generator_UserColumnName="STDev" msprop:Generator_ColumnPropNameInRow="STDev" msprop:Generator_ColumnVarNameInTable="columnSTDev" msprop:Generator_ColumnPropNameInTable="STDevColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Tier" msprop:Generator_UserColumnName="Tier" msprop:Generator_ColumnPropNameInRow="Tier" msprop:Generator_ColumnVarNameInTable="columnTier" msprop:Generator_ColumnPropNameInTable="TierColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInTable="CCYColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DocClause" msprop:Generator_UserColumnName="DocClause" msprop:Generator_ColumnPropNameInRow="DocClause" msprop:Generator_ColumnVarNameInTable="columnDocClause" msprop:Generator_ColumnPropNameInTable="DocClauseColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="NegBasisSingleTrade" msprop:Generator_UserTableName="NegBasisSingleTrade" msprop:Generator_RowDeletedName="NegBasisSingleTradeRowDeleted" msprop:Generator_RowChangedName="NegBasisSingleTradeRowChanged" msprop:Generator_RowClassName="NegBasisSingleTradeRow" msprop:Generator_RowChangingName="NegBasisSingleTradeRowChanging" msprop:Generator_RowEvArgName="NegBasisSingleTradeRowChangeEvent" msprop:Generator_RowEvHandlerName="NegBasisSingleTradeRowChangeEventHandler" msprop:Generator_TableClassName="NegBasisSingleTradeDataTable" msprop:Generator_TableVarName="tableNegBasisSingleTrade" msprop:Generator_RowDeletingName="NegBasisSingleTradeRowDeleting" msprop:Generator_TablePropName="NegBasisSingleTrade">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="TradeID" msprop:Generator_UserColumnName="TradeID" msprop:Generator_ColumnPropNameInRow="TradeID" msprop:Generator_ColumnVarNameInTable="columnTradeID" msprop:Generator_ColumnPropNameInTable="TradeIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CurrentOutstanding" msprop:Generator_UserColumnName="CurrentOutstanding" msprop:Generator_ColumnPropNameInRow="CurrentOutstanding" msprop:Generator_ColumnVarNameInTable="columnCurrentOutstanding" msprop:Generator_ColumnPropNameInTable="CurrentOutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="MaturityDate" msprop:Generator_UserColumnName="MaturityDate" msprop:Generator_ColumnPropNameInRow="MaturityDate" msprop:Generator_ColumnVarNameInTable="columnMaturityDate" msprop:Generator_ColumnPropNameInTable="MaturityDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Spread" msprop:Generator_UserColumnName="Spread" msprop:Generator_ColumnPropNameInRow="Spread" msprop:Generator_ColumnVarNameInTable="columnSpread" msprop:Generator_ColumnPropNameInTable="SpreadColumn" type="xs:double" minOccurs="0" />
              <xs:element name="MTMSpread" msprop:Generator_UserColumnName="MTMSpread" msprop:Generator_ColumnPropNameInRow="MTMSpread" msprop:Generator_ColumnVarNameInTable="columnMTMSpread" msprop:Generator_ColumnPropNameInTable="MTMSpreadColumn" type="xs:double" minOccurs="0" />
              <xs:element name="HPDays" msprop:Generator_UserColumnName="HPDays" msprop:Generator_ColumnPropNameInRow="HPDays" msprop:Generator_ColumnVarNameInTable="columnHPDays" msprop:Generator_ColumnPropNameInTable="HPDaysColumn" type="xs:int" minOccurs="0" />
              <xs:element name="HPCarry" msprop:Generator_UserColumnName="HPCarry" msprop:Generator_ColumnPropNameInRow="HPCarry" msprop:Generator_ColumnVarNameInTable="columnHPCarry" msprop:Generator_ColumnPropNameInTable="HPCarryColumn" type="xs:double" minOccurs="0" />
              <xs:element name="HPPresentValue" msprop:Generator_UserColumnName="HPPresentValue" msprop:Generator_ColumnPropNameInRow="HPPresentValue" msprop:Generator_ColumnVarNameInTable="columnHPPresentValue" msprop:Generator_ColumnPropNameInTable="HPPresentValueColumn" type="xs:double" minOccurs="0" />
              <xs:element name="HPTotalPL" msprop:Generator_UserColumnName="HPTotalPL" msprop:Generator_ColumnPropNameInRow="HPTotalPL" msprop:Generator_ColumnVarNameInTable="columnHPTotalPL" msprop:Generator_ColumnPropNameInTable="HPTotalPLColumn" type="xs:double" minOccurs="0" />
              <xs:element name="CreditBPV" msprop:Generator_UserColumnName="CreditBPV" msprop:Generator_ColumnPropNameInRow="CreditBPV" msprop:Generator_ColumnVarNameInTable="columnCreditBPV" msprop:Generator_ColumnPropNameInTable="CreditBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NegBasisID" msprop:Generator_UserColumnName="NegBasisID" msprop:Generator_ColumnPropNameInRow="NegBasisID" msprop:Generator_ColumnVarNameInTable="columnNegBasisID" msprop:Generator_ColumnPropNameInTable="NegBasisIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CDSMoverPortfolio" msprop:Generator_UserTableName="CDSMoverPortfolio" msprop:Generator_RowDeletedName="CDSMoverPortfolioRowDeleted" msprop:Generator_RowChangedName="CDSMoverPortfolioRowChanged" msprop:Generator_RowClassName="CDSMoverPortfolioRow" msprop:Generator_RowChangingName="CDSMoverPortfolioRowChanging" msprop:Generator_RowEvArgName="CDSMoverPortfolioRowChangeEvent" msprop:Generator_RowEvHandlerName="CDSMoverPortfolioRowChangeEventHandler" msprop:Generator_TableClassName="CDSMoverPortfolioDataTable" msprop:Generator_TableVarName="tableCDSMoverPortfolio" msprop:Generator_RowDeletingName="CDSMoverPortfolioRowDeleting" msprop:Generator_TablePropName="CDSMoverPortfolio">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInTable="CCYColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Today5Y" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Today5Y" msprop:Generator_ColumnPropNameInRow="Today5Y" msprop:Generator_ColumnVarNameInTable="columnToday5Y" msprop:Generator_ColumnPropNameInTable="Today5YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Yesterday5Y" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Yesterday5Y" msprop:Generator_ColumnPropNameInRow="Yesterday5Y" msprop:Generator_ColumnVarNameInTable="columnYesterday5Y" msprop:Generator_ColumnPropNameInTable="Yesterday5YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Change" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Change" msprop:Generator_ColumnPropNameInRow="Change" msprop:Generator_ColumnVarNameInTable="columnChange" msprop:Generator_ColumnPropNameInTable="ChangeColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CorpPortSP" msprop:Generator_UserTableName="CorpPortSP" msprop:Generator_RowDeletedName="CorpPortSPRowDeleted" msprop:Generator_RowChangedName="CorpPortSPRowChanged" msprop:Generator_RowClassName="CorpPortSPRow" msprop:Generator_RowChangingName="CorpPortSPRowChanging" msprop:Generator_RowEvArgName="CorpPortSPRowChangeEvent" msprop:Generator_RowEvHandlerName="CorpPortSPRowChangeEventHandler" msprop:Generator_TableClassName="CorpPortSPDataTable" msprop:Generator_TableVarName="tableCorpPortSP" msprop:Generator_RowDeletingName="CorpPortSPRowDeleting" msprop:Generator_TablePropName="CorpPortSP">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="Outstanding" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Outstanding" msprop:Generator_ColumnVarNameInTable="columnOutstanding" msprop:Generator_ColumnPropNameInRow="Outstanding" msprop:Generator_ColumnPropNameInTable="OutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Derived_Rating" msprop:Generator_UserColumnName="Derived_Rating" msprop:Generator_ColumnVarNameInTable="columnDerived_Rating" msprop:Generator_ColumnPropNameInRow="Derived_Rating" msprop:Generator_ColumnPropNameInTable="Derived_RatingColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RAShort" msprop:Generator_UserColumnName="RAShort" msprop:Generator_ColumnVarNameInTable="columnRAShort" msprop:Generator_ColumnPropNameInRow="RAShort" msprop:Generator_ColumnPropNameInTable="RAShortColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RatingOrder" msprop:Generator_UserColumnName="RatingOrder" msprop:Generator_ColumnVarNameInTable="columnRatingOrder" msprop:Generator_ColumnPropNameInRow="RatingOrder" msprop:Generator_ColumnPropNameInTable="RatingOrderColumn" type="xs:float" minOccurs="0" />
              <xs:element name="CBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="CBPV" msprop:Generator_ColumnVarNameInTable="columnCBPV" msprop:Generator_ColumnPropNameInRow="CBPV" msprop:Generator_ColumnPropNameInTable="CBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:decimal" minOccurs="0" />
              <xs:element name="EvalDate" msprop:Generator_UserColumnName="EvalDate" msprop:Generator_ColumnVarNameInTable="columnEvalDate" msprop:Generator_ColumnPropNameInRow="EvalDate" msprop:Generator_ColumnPropNameInTable="EvalDateColumn" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RMBSTradeSensi" msprop:Generator_UserTableName="RMBSTradeSensi" msprop:Generator_RowDeletedName="RMBSTradeSensiRowDeleted" msprop:Generator_RowChangedName="RMBSTradeSensiRowChanged" msprop:Generator_RowClassName="RMBSTradeSensiRow" msprop:Generator_RowChangingName="RMBSTradeSensiRowChanging" msprop:Generator_RowEvArgName="RMBSTradeSensiRowChangeEvent" msprop:Generator_RowEvHandlerName="RMBSTradeSensiRowChangeEventHandler" msprop:Generator_TableClassName="RMBSTradeSensiDataTable" msprop:Generator_TableVarName="tableRMBSTradeSensi" msprop:Generator_RowDeletingName="RMBSTradeSensiRowDeleting" msprop:Generator_TablePropName="RMBSTradeSensi">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecuritySubClass" msprop:Generator_UserColumnName="SecuritySubClass" msprop:Generator_ColumnPropNameInRow="SecuritySubClass" msprop:Generator_ColumnVarNameInTable="columnSecuritySubClass" msprop:Generator_ColumnPropNameInTable="SecuritySubClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreditBPV" msprop:Generator_UserColumnName="CreditBPV" msprop:Generator_ColumnPropNameInRow="CreditBPV" msprop:Generator_ColumnVarNameInTable="columnCreditBPV" msprop:Generator_ColumnPropNameInTable="CreditBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Outstanding" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Outstanding" msprop:Generator_ColumnPropNameInRow="Outstanding" msprop:Generator_ColumnVarNameInTable="columnOutstanding" msprop:Generator_ColumnPropNameInTable="OutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Count" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Count" msprop:Generator_ColumnVarNameInTable="columnCount" msprop:Generator_ColumnPropNameInRow="Count" msprop:Generator_ColumnPropNameInTable="CountColumn" type="xs:int" minOccurs="0" />
              <xs:element name="Wrap" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Wrap" msprop:Generator_ColumnPropNameInRow="Wrap" msprop:Generator_ColumnVarNameInTable="columnWrap" msprop:Generator_ColumnPropNameInTable="WrapColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SPRatingDetail" msprop:Generator_UserTableName="SPRatingDetail" msprop:Generator_RowDeletedName="SPRatingDetailRowDeleted" msprop:Generator_RowChangedName="SPRatingDetailRowChanged" msprop:Generator_RowClassName="SPRatingDetailRow" msprop:Generator_RowChangingName="SPRatingDetailRowChanging" msprop:Generator_RowEvArgName="SPRatingDetailRowChangeEvent" msprop:Generator_RowEvHandlerName="SPRatingDetailRowChangeEventHandler" msprop:Generator_TableClassName="SPRatingDetailDataTable" msprop:Generator_TableVarName="tableSPRatingDetail" msprop:Generator_RowDeletingName="SPRatingDetailRowDeleting" msprop:Generator_TablePropName="SPRatingDetail">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="Outstanding" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Outstanding" msprop:Generator_ColumnVarNameInTable="columnOutstanding" msprop:Generator_ColumnPropNameInRow="Outstanding" msprop:Generator_ColumnPropNameInTable="OutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Derived_Rating" msprop:Generator_UserColumnName="Derived_Rating" msprop:Generator_ColumnVarNameInTable="columnDerived_Rating" msprop:Generator_ColumnPropNameInRow="Derived_Rating" msprop:Generator_ColumnPropNameInTable="Derived_RatingColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RAShort" msprop:Generator_UserColumnName="RAShort" msprop:Generator_ColumnVarNameInTable="columnRAShort" msprop:Generator_ColumnPropNameInRow="RAShort" msprop:Generator_ColumnPropNameInTable="RAShortColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RatingOrder" msprop:Generator_UserColumnName="RatingOrder" msprop:Generator_ColumnVarNameInTable="columnRatingOrder" msprop:Generator_ColumnPropNameInRow="RatingOrder" msprop:Generator_ColumnPropNameInTable="RatingOrderColumn" type="xs:float" minOccurs="0" />
              <xs:element name="CBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="CBPV" msprop:Generator_ColumnVarNameInTable="columnCBPV" msprop:Generator_ColumnPropNameInRow="CBPV" msprop:Generator_ColumnPropNameInTable="CBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:decimal" minOccurs="0" />
              <xs:element name="EvalDate" msprop:Generator_UserColumnName="EvalDate" msprop:Generator_ColumnVarNameInTable="columnEvalDate" msprop:Generator_ColumnPropNameInRow="EvalDate" msprop:Generator_ColumnPropNameInTable="EvalDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnPropNameInTable="CCYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MaturityDate" msprop:Generator_UserColumnName="MaturityDate" msprop:Generator_ColumnVarNameInTable="columnMaturityDate" msprop:Generator_ColumnPropNameInRow="MaturityDate" msprop:Generator_ColumnPropNameInTable="MaturityDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TradeID" msprop:Generator_UserColumnName="TradeID" msprop:Generator_ColumnVarNameInTable="columnTradeID" msprop:Generator_ColumnPropNameInRow="TradeID" msprop:Generator_ColumnPropNameInTable="TradeIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RMBS_x0020_SubClassDetails" msprop:Generator_UserTableName="RMBS SubClassDetails" msprop:Generator_RowDeletedName="RMBS_SubClassDetailsRowDeleted" msprop:Generator_RowChangedName="RMBS_SubClassDetailsRowChanged" msprop:Generator_RowClassName="RMBS_SubClassDetailsRow" msprop:Generator_RowChangingName="RMBS_SubClassDetailsRowChanging" msprop:Generator_RowEvArgName="RMBS_SubClassDetailsRowChangeEvent" msprop:Generator_RowEvHandlerName="RMBS_SubClassDetailsRowChangeEventHandler" msprop:Generator_TableClassName="RMBS_SubClassDetailsDataTable" msprop:Generator_TableVarName="tableRMBS_SubClassDetails" msprop:Generator_RowDeletingName="RMBS_SubClassDetailsRowDeleting" msprop:Generator_TablePropName="RMBS_SubClassDetails">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="SecuritySubClass" msprop:Generator_UserColumnName="SecuritySubClass" msprop:Generator_ColumnPropNameInRow="SecuritySubClass" msprop:Generator_ColumnVarNameInTable="columnSecuritySubClass" msprop:Generator_ColumnPropNameInTable="SecuritySubClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MaturityDate" msprop:Generator_UserColumnName="MaturityDate" msprop:Generator_ColumnPropNameInRow="MaturityDate" msprop:Generator_ColumnVarNameInTable="columnMaturityDate" msprop:Generator_ColumnPropNameInTable="MaturityDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="CurrentOutstanding" msprop:Generator_UserColumnName="CurrentOutstanding" msprop:Generator_ColumnPropNameInRow="CurrentOutstanding" msprop:Generator_ColumnVarNameInTable="columnCurrentOutstanding" msprop:Generator_ColumnPropNameInTable="CurrentOutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="CUSIP" msprop:Generator_UserColumnName="CUSIP" msprop:Generator_ColumnPropNameInRow="CUSIP" msprop:Generator_ColumnVarNameInTable="columnCUSIP" msprop:Generator_ColumnPropNameInTable="CUSIPColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreditBPV" msprop:Generator_UserColumnName="CreditBPV" msprop:Generator_ColumnPropNameInRow="CreditBPV" msprop:Generator_ColumnVarNameInTable="columnCreditBPV" msprop:Generator_ColumnPropNameInTable="CreditBPVColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LBORiskExposure" msprop:Generator_UserTableName="LBORiskExposure" msprop:Generator_RowDeletedName="LBORiskExposureRowDeleted" msprop:Generator_RowChangedName="LBORiskExposureRowChanged" msprop:Generator_RowClassName="LBORiskExposureRow" msprop:Generator_RowChangingName="LBORiskExposureRowChanging" msprop:Generator_RowEvArgName="LBORiskExposureRowChangeEvent" msprop:Generator_RowEvHandlerName="LBORiskExposureRowChangeEventHandler" msprop:Generator_TableClassName="LBORiskExposureDataTable" msprop:Generator_TableVarName="tableLBORiskExposure" msprop:Generator_RowDeletingName="LBORiskExposureRowDeleting" msprop:Generator_TablePropName="LBORiskExposure">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expr2" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Expr2" msprop:Generator_ColumnVarNameInTable="columnExpr2" msprop:Generator_ColumnPropNameInRow="Expr2" msprop:Generator_ColumnPropNameInTable="Expr2Column" type="xs:double" minOccurs="0" />
              <xs:element name="Expr1" msprop:Generator_UserColumnName="Expr1" msprop:Generator_ColumnVarNameInTable="columnExpr1" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_ColumnPropNameInTable="Expr1Column" type="xs:dateTime" />
              <xs:element name="Expr3" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Expr3" msprop:Generator_ColumnVarNameInTable="columnExpr3" msprop:Generator_ColumnPropNameInRow="Expr3" msprop:Generator_ColumnPropNameInTable="Expr3Column" type="xs:double" minOccurs="0" />
              <xs:element name="AvgLBO" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AvgLBO" msprop:Generator_ColumnVarNameInTable="columnAvgLBO" msprop:Generator_ColumnPropNameInRow="AvgLBO" msprop:Generator_ColumnPropNameInTable="AvgLBOColumn" type="xs:decimal" minOccurs="0" />
              <xs:element name="Count" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Count" msprop:Generator_ColumnPropNameInRow="Count" msprop:Generator_ColumnVarNameInTable="columnCount" msprop:Generator_ColumnPropNameInTable="CountColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SPCrossTab" msprop:Generator_UserTableName="SPCrossTab" msprop:Generator_RowDeletedName="SPCrossTabRowDeleted" msprop:Generator_RowChangedName="SPCrossTabRowChanged" msprop:Generator_RowClassName="SPCrossTabRow" msprop:Generator_RowChangingName="SPCrossTabRowChanging" msprop:Generator_RowEvArgName="SPCrossTabRowChangeEvent" msprop:Generator_RowEvHandlerName="SPCrossTabRowChangeEventHandler" msprop:Generator_TableClassName="SPCrossTabDataTable" msprop:Generator_TableVarName="tableSPCrossTab" msprop:Generator_RowDeletingName="SPCrossTabRowDeleting" msprop:Generator_TablePropName="SPCrossTab">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="EvalDate" msprop:Generator_UserColumnName="EvalDate" msprop:Generator_ColumnPropNameInRow="EvalDate" msprop:Generator_ColumnVarNameInTable="columnEvalDate" msprop:Generator_ColumnPropNameInTable="EvalDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AAA" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AAA" msprop:Generator_ColumnPropNameInRow="AAA" msprop:Generator_ColumnVarNameInTable="columnAAA" msprop:Generator_ColumnPropNameInTable="AAAColumn" type="xs:double" minOccurs="0" />
              <xs:element name="AA_x002B_" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AA+" msprop:Generator_ColumnPropNameInRow="_AA_" msprop:Generator_ColumnVarNameInTable="_columnAA_" msprop:Generator_ColumnPropNameInTable="_AA_Column" type="xs:double" minOccurs="0" />
              <xs:element name="AA" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AA" msprop:Generator_ColumnPropNameInRow="AA" msprop:Generator_ColumnVarNameInTable="columnAA" msprop:Generator_ColumnPropNameInTable="AAColumn" type="xs:double" minOccurs="0" />
              <xs:element name="AA-" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AA-" msprop:Generator_ColumnPropNameInRow="__AA_" msprop:Generator_ColumnVarNameInTable="__columnAA_" msprop:Generator_ColumnPropNameInTable="__AA_Column" type="xs:double" minOccurs="0" />
              <xs:element name="A_x002B_" msdata:ReadOnly="true" msprop:Generator_UserColumnName="A+" msprop:Generator_ColumnPropNameInRow="_A_" msprop:Generator_ColumnVarNameInTable="_columnA_" msprop:Generator_ColumnPropNameInTable="_A_Column" type="xs:double" minOccurs="0" />
              <xs:element name="A" msdata:ReadOnly="true" msprop:Generator_UserColumnName="A" msprop:Generator_ColumnPropNameInRow="A" msprop:Generator_ColumnVarNameInTable="columnA" msprop:Generator_ColumnPropNameInTable="AColumn" type="xs:double" minOccurs="0" />
              <xs:element name="N_x002F_A" msdata:ReadOnly="true" msprop:Generator_UserColumnName="N/A" msprop:Generator_ColumnPropNameInRow="_N_A" msprop:Generator_ColumnVarNameInTable="_columnN_A" msprop:Generator_ColumnPropNameInTable="_N_AColumn" type="xs:double" minOccurs="0" />
              <xs:element name="BBB_x002B_" msdata:ReadOnly="true" msprop:Generator_UserColumnName="BBB+" msprop:Generator_ColumnPropNameInRow="_BBB_" msprop:Generator_ColumnVarNameInTable="_columnBBB_" msprop:Generator_ColumnPropNameInTable="_BBB_Column" type="xs:double" minOccurs="0" />
              <xs:element name="BBB" msdata:ReadOnly="true" msprop:Generator_UserColumnName="BBB" msprop:Generator_ColumnPropNameInRow="BBB" msprop:Generator_ColumnVarNameInTable="columnBBB" msprop:Generator_ColumnPropNameInTable="BBBColumn" type="xs:double" minOccurs="0" />
              <xs:element name="BBB-" msdata:ReadOnly="true" msprop:Generator_UserColumnName="BBB-" msprop:Generator_ColumnPropNameInRow="__BBB_" msprop:Generator_ColumnVarNameInTable="__columnBBB_" msprop:Generator_ColumnPropNameInTable="__BBB_Column" type="xs:double" minOccurs="0" />
              <xs:element name="A-" msdata:ReadOnly="true" msprop:Generator_UserColumnName="A-" msprop:Generator_ColumnPropNameInRow="__A_" msprop:Generator_ColumnVarNameInTable="__columnA_" msprop:Generator_ColumnPropNameInTable="__A_Column" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RedCodeCheck" msprop:Generator_UserTableName="RedCodeCheck" msprop:Generator_RowDeletedName="RedCodeCheckRowDeleted" msprop:Generator_RowChangedName="RedCodeCheckRowChanged" msprop:Generator_RowClassName="RedCodeCheckRow" msprop:Generator_RowChangingName="RedCodeCheckRowChanging" msprop:Generator_RowEvArgName="RedCodeCheckRowChangeEvent" msprop:Generator_RowEvHandlerName="RedCodeCheckRowChangeEventHandler" msprop:Generator_TableClassName="RedCodeCheckDataTable" msprop:Generator_TableVarName="tableRedCodeCheck" msprop:Generator_RowDeletingName="RedCodeCheckRowDeleting" msprop:Generator_TablePropName="RedCodeCheck">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="REDCODE" msprop:Generator_UserColumnName="REDCODE" msprop:Generator_ColumnPropNameInRow="REDCODE" msprop:Generator_ColumnVarNameInTable="columnREDCODE" msprop:Generator_ColumnPropNameInTable="REDCODEColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CurrentOutstanding" msprop:Generator_UserColumnName="CurrentOutstanding" msprop:Generator_ColumnPropNameInRow="CurrentOutstanding" msprop:Generator_ColumnVarNameInTable="columnCurrentOutstanding" msprop:Generator_ColumnPropNameInTable="CurrentOutstandingColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OPICSBONDS" msprop:Generator_UserTableName="OPICSBONDS" msprop:Generator_RowDeletedName="OPICSBONDSRowDeleted" msprop:Generator_RowChangedName="OPICSBONDSRowChanged" msprop:Generator_RowClassName="OPICSBONDSRow" msprop:Generator_RowChangingName="OPICSBONDSRowChanging" msprop:Generator_RowEvArgName="OPICSBONDSRowChangeEvent" msprop:Generator_RowEvHandlerName="OPICSBONDSRowChangeEventHandler" msprop:Generator_TableClassName="OPICSBONDSDataTable" msprop:Generator_TableVarName="tableOPICSBONDS" msprop:Generator_RowDeletingName="OPICSBONDSRowDeleting" msprop:Generator_TablePropName="OPICSBONDS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DEALID" msprop:Generator_UserColumnName="DEALID" msprop:Generator_ColumnPropNameInRow="DEALID" msprop:Generator_ColumnVarNameInTable="columnDEALID" msprop:Generator_ColumnPropNameInTable="DEALIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SECURITY" msprop:Generator_UserColumnName="SECURITY" msprop:Generator_ColumnPropNameInRow="SECURITY" msprop:Generator_ColumnVarNameInTable="columnSECURITY" msprop:Generator_ColumnPropNameInTable="SECURITYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInTable="CCYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MDATE" msprop:Generator_UserColumnName="MDATE" msprop:Generator_ColumnPropNameInRow="MDATE" msprop:Generator_ColumnVarNameInTable="columnMDATE" msprop:Generator_ColumnPropNameInTable="MDATEColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="CURFACE" msprop:Generator_UserColumnName="CURFACE" msprop:Generator_ColumnPropNameInRow="CURFACE" msprop:Generator_ColumnVarNameInTable="columnCURFACE" msprop:Generator_ColumnPropNameInTable="CURFACEColumn" type="xs:double" minOccurs="0" />
              <xs:element name="ASWPSPRD" msprop:Generator_UserColumnName="ASWPSPRD" msprop:Generator_ColumnPropNameInRow="ASWPSPRD" msprop:Generator_ColumnVarNameInTable="columnASWPSPRD" msprop:Generator_ColumnPropNameInTable="ASWPSPRDColumn" type="xs:double" minOccurs="0" />
              <xs:element name="SPREAD" msprop:Generator_UserColumnName="SPREAD" msprop:Generator_ColumnPropNameInRow="SPREAD" msprop:Generator_ColumnVarNameInTable="columnSPREAD" msprop:Generator_ColumnPropNameInTable="SPREADColumn" type="xs:double" minOccurs="0" />
              <xs:element name="CUSIP" msprop:Generator_UserColumnName="CUSIP" msprop:Generator_ColumnPropNameInRow="CUSIP" msprop:Generator_ColumnVarNameInTable="columnCUSIP" msprop:Generator_ColumnPropNameInTable="CUSIPColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BondCovenants" msprop:Generator_UserTableName="BondCovenants" msprop:Generator_RowDeletedName="BondCovenantsRowDeleted" msprop:Generator_RowChangedName="BondCovenantsRowChanged" msprop:Generator_RowClassName="BondCovenantsRow" msprop:Generator_RowChangingName="BondCovenantsRowChanging" msprop:Generator_RowEvArgName="BondCovenantsRowChangeEvent" msprop:Generator_RowEvHandlerName="BondCovenantsRowChangeEventHandler" msprop:Generator_TableClassName="BondCovenantsDataTable" msprop:Generator_TableVarName="tableBondCovenants" msprop:Generator_RowDeletingName="BondCovenantsRowDeleting" msprop:Generator_TablePropName="BondCovenants">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CUSIP" msprop:Generator_UserColumnName="CUSIP" msprop:Generator_ColumnVarNameInTable="columnCUSIP" msprop:Generator_ColumnPropNameInRow="CUSIP" msprop:Generator_ColumnPropNameInTable="CUSIPColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="STEP_UP_DOWN_PROVISION" msprop:Generator_UserColumnName="STEP_UP_DOWN_PROVISION" msprop:Generator_ColumnVarNameInTable="columnSTEP_UP_DOWN_PROVISION" msprop:Generator_ColumnPropNameInRow="STEP_UP_DOWN_PROVISION" msprop:Generator_ColumnPropNameInTable="STEP_UP_DOWN_PROVISIONColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="STEP_UP_DOWN_PROVISION_TRIGGER" msprop:Generator_UserColumnName="STEP_UP_DOWN_PROVISION_TRIGGER" msprop:Generator_ColumnVarNameInTable="columnSTEP_UP_DOWN_PROVISION_TRIGGER" msprop:Generator_ColumnPropNameInRow="STEP_UP_DOWN_PROVISION_TRIGGER" msprop:Generator_ColumnPropNameInTable="STEP_UP_DOWN_PROVISION_TRIGGERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CHNG_OF_CONTROL_COVENANT" msprop:Generator_UserColumnName="CHNG_OF_CONTROL_COVENANT" msprop:Generator_ColumnVarNameInTable="columnCHNG_OF_CONTROL_COVENANT" msprop:Generator_ColumnPropNameInRow="CHNG_OF_CONTROL_COVENANT" msprop:Generator_ColumnPropNameInTable="CHNG_OF_CONTROL_COVENANTColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="RATINGS_TRIGGER_PROVISION" msprop:Generator_UserColumnName="RATINGS_TRIGGER_PROVISION" msprop:Generator_ColumnVarNameInTable="columnRATINGS_TRIGGER_PROVISION" msprop:Generator_ColumnPropNameInRow="RATINGS_TRIGGER_PROVISION" msprop:Generator_ColumnPropNameInTable="RATINGS_TRIGGER_PROVISIONColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="CALLABLE" msprop:Generator_UserColumnName="CALLABLE" msprop:Generator_ColumnVarNameInTable="columnCALLABLE" msprop:Generator_ColumnPropNameInRow="CALLABLE" msprop:Generator_ColumnPropNameInTable="CALLABLEColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="CALL_FEATURE" msprop:Generator_UserColumnName="CALL_FEATURE" msprop:Generator_ColumnVarNameInTable="columnCALL_FEATURE" msprop:Generator_ColumnPropNameInRow="CALL_FEATURE" msprop:Generator_ColumnPropNameInTable="CALL_FEATUREColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NXT_CALL_DT" msprop:Generator_UserColumnName="NXT_CALL_DT" msprop:Generator_ColumnVarNameInTable="columnNXT_CALL_DT" msprop:Generator_ColumnPropNameInRow="NXT_CALL_DT" msprop:Generator_ColumnPropNameInTable="NXT_CALL_DTColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="MAKE_WHOLE_CALL" msprop:Generator_UserColumnName="MAKE_WHOLE_CALL" msprop:Generator_ColumnVarNameInTable="columnMAKE_WHOLE_CALL" msprop:Generator_ColumnPropNameInRow="MAKE_WHOLE_CALL" msprop:Generator_ColumnPropNameInTable="MAKE_WHOLE_CALLColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnPropNameInTable="CCYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CurrentOutstanding" msprop:Generator_UserColumnName="CurrentOutstanding" msprop:Generator_ColumnVarNameInTable="columnCurrentOutstanding" msprop:Generator_ColumnPropNameInRow="CurrentOutstanding" msprop:Generator_ColumnPropNameInTable="CurrentOutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="MaturityDate" msprop:Generator_UserColumnName="MaturityDate" msprop:Generator_ColumnVarNameInTable="columnMaturityDate" msprop:Generator_ColumnPropNameInRow="MaturityDate" msprop:Generator_ColumnPropNameInTable="MaturityDateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expr1" msprop:Generator_UserColumnName="Expr1" msprop:Generator_ColumnVarNameInTable="columnExpr1" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_ColumnPropNameInTable="Expr1Column">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CDSCurveSpread" msprop:Generator_UserTableName="CDSCurveSpread" msprop:Generator_RowDeletedName="CDSCurveSpreadRowDeleted" msprop:Generator_RowChangedName="CDSCurveSpreadRowChanged" msprop:Generator_RowClassName="CDSCurveSpreadRow" msprop:Generator_RowChangingName="CDSCurveSpreadRowChanging" msprop:Generator_RowEvArgName="CDSCurveSpreadRowChangeEvent" msprop:Generator_RowEvHandlerName="CDSCurveSpreadRowChangeEventHandler" msprop:Generator_TableClassName="CDSCurveSpreadDataTable" msprop:Generator_TableVarName="tableCDSCurveSpread" msprop:Generator_RowDeletingName="CDSCurveSpreadRowDeleting" msprop:Generator_TablePropName="CDSCurveSpread">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Tier" msprop:Generator_UserColumnName="Tier" msprop:Generator_ColumnPropNameInRow="Tier" msprop:Generator_ColumnVarNameInTable="columnTier" msprop:Generator_ColumnPropNameInTable="TierColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CCY" msprop:Generator_UserColumnName="CCY" msprop:Generator_ColumnPropNameInRow="CCY" msprop:Generator_ColumnVarNameInTable="columnCCY" msprop:Generator_ColumnPropNameInTable="CCYColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DocClause" msprop:Generator_UserColumnName="DocClause" msprop:Generator_ColumnPropNameInRow="DocClause" msprop:Generator_ColumnVarNameInTable="columnDocClause" msprop:Generator_ColumnPropNameInTable="DocClauseColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="_5Y" msprop:Generator_UserColumnName="_5Y" msprop:Generator_ColumnPropNameInRow="_5Y" msprop:Generator_ColumnVarNameInTable="column_5Y" msprop:Generator_ColumnPropNameInTable="_5YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_7Y" msprop:Generator_UserColumnName="_7Y" msprop:Generator_ColumnPropNameInRow="_7Y" msprop:Generator_ColumnVarNameInTable="column_7Y" msprop:Generator_ColumnPropNameInTable="_7YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="_10Y" msprop:Generator_UserColumnName="_10Y" msprop:Generator_ColumnPropNameInRow="_10Y" msprop:Generator_ColumnVarNameInTable="column_10Y" msprop:Generator_ColumnPropNameInTable="_10YColumn" type="xs:double" minOccurs="0" />
              <xs:element name="AVG57" msdata:ReadOnly="true" msprop:Generator_UserColumnName="AVG57" msprop:Generator_ColumnVarNameInTable="columnAVG57" msprop:Generator_ColumnPropNameInRow="AVG57" msprop:Generator_ColumnPropNameInTable="AVG57Column" type="xs:double" minOccurs="0" />
              <xs:element name="STDev57" msdata:ReadOnly="true" msprop:Generator_UserColumnName="STDev57" msprop:Generator_ColumnVarNameInTable="columnSTDev57" msprop:Generator_ColumnPropNameInRow="STDev57" msprop:Generator_ColumnPropNameInTable="STDev57Column" type="xs:double" minOccurs="0" />
              <xs:element name="ZSCORE57" msdata:ReadOnly="true" msprop:Generator_UserColumnName="ZSCORE57" msprop:Generator_ColumnVarNameInTable="columnZSCORE57" msprop:Generator_ColumnPropNameInRow="ZSCORE57" msprop:Generator_ColumnPropNameInTable="ZSCORE57Column" type="xs:double" minOccurs="0" />
              <xs:element name="Cruve57" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Cruve57" msprop:Generator_ColumnVarNameInTable="columnCruve57" msprop:Generator_ColumnPropNameInRow="Cruve57" msprop:Generator_ColumnPropNameInTable="Cruve57Column" type="xs:double" minOccurs="0" />
              <xs:element name="Curve105" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Curve105" msprop:Generator_ColumnVarNameInTable="columnCurve105" msprop:Generator_ColumnPropNameInRow="Curve105" msprop:Generator_ColumnPropNameInTable="Curve105Column" type="xs:double" minOccurs="0" />
              <xs:element name="Avg105" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Avg105" msprop:Generator_ColumnVarNameInTable="columnAvg105" msprop:Generator_ColumnPropNameInRow="Avg105" msprop:Generator_ColumnPropNameInTable="Avg105Column" type="xs:double" minOccurs="0" />
              <xs:element name="StDev105" msdata:ReadOnly="true" msprop:Generator_UserColumnName="StDev105" msprop:Generator_ColumnVarNameInTable="columnStDev105" msprop:Generator_ColumnPropNameInRow="StDev105" msprop:Generator_ColumnPropNameInTable="StDev105Column" type="xs:double" minOccurs="0" />
              <xs:element name="ZScore105" msdata:ReadOnly="true" msprop:Generator_UserColumnName="ZScore105" msprop:Generator_ColumnVarNameInTable="columnZScore105" msprop:Generator_ColumnPropNameInRow="ZScore105" msprop:Generator_ColumnPropNameInTable="ZScore105Column" type="xs:double" minOccurs="0" />
              <xs:element name="AvRating" msprop:Generator_UserColumnName="AvRating" msprop:Generator_ColumnVarNameInTable="columnAvRating" msprop:Generator_ColumnPropNameInRow="AvRating" msprop:Generator_ColumnPropNameInTable="AvRatingColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Country" msprop:Generator_UserColumnName="Country" msprop:Generator_ColumnVarNameInTable="columnCountry" msprop:Generator_ColumnPropNameInRow="Country" msprop:Generator_ColumnPropNameInTable="CountryColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MissingSector" msprop:Generator_UserTableName="MissingSector" msprop:Generator_RowDeletedName="MissingSectorRowDeleted" msprop:Generator_RowChangedName="MissingSectorRowChanged" msprop:Generator_RowClassName="MissingSectorRow" msprop:Generator_RowChangingName="MissingSectorRowChanging" msprop:Generator_RowEvArgName="MissingSectorRowChangeEvent" msprop:Generator_RowEvHandlerName="MissingSectorRowChangeEventHandler" msprop:Generator_TableClassName="MissingSectorDataTable" msprop:Generator_TableVarName="tableMissingSector" msprop:Generator_RowDeletingName="MissingSectorRowDeleting" msprop:Generator_TablePropName="MissingSector">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SaveDate" msprop:Generator_UserColumnName="SaveDate" msprop:Generator_ColumnVarNameInTable="columnSaveDate" msprop:Generator_ColumnPropNameInRow="SaveDate" msprop:Generator_ColumnPropNameInTable="SaveDateColumn" type="xs:dateTime" />
              <xs:element name="TradeID" msprop:Generator_UserColumnName="TradeID" msprop:Generator_ColumnVarNameInTable="columnTradeID" msprop:Generator_ColumnPropNameInRow="TradeID" msprop:Generator_ColumnPropNameInTable="TradeIDColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TICKER" msprop:Generator_UserColumnName="TICKER" msprop:Generator_ColumnVarNameInTable="columnTICKER" msprop:Generator_ColumnPropNameInRow="TICKER" msprop:Generator_ColumnPropNameInTable="TICKERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IndustrySubDesignations" msprop:Generator_UserColumnName="IndustrySubDesignations" msprop:Generator_ColumnVarNameInTable="columnIndustrySubDesignations" msprop:Generator_ColumnPropNameInRow="IndustrySubDesignations" msprop:Generator_ColumnPropNameInTable="IndustrySubDesignationsColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RMBSTradeSensi2" msprop:Generator_UserTableName="RMBSTradeSensi2" msprop:Generator_RowDeletedName="RMBSTradeSensi2RowDeleted" msprop:Generator_RowChangedName="RMBSTradeSensi2RowChanged" msprop:Generator_RowClassName="RMBSTradeSensi2Row" msprop:Generator_RowChangingName="RMBSTradeSensi2RowChanging" msprop:Generator_RowEvArgName="RMBSTradeSensi2RowChangeEvent" msprop:Generator_RowEvHandlerName="RMBSTradeSensi2RowChangeEventHandler" msprop:Generator_TableClassName="RMBSTradeSensi2DataTable" msprop:Generator_TableVarName="tableRMBSTradeSensi2" msprop:Generator_RowDeletingName="RMBSTradeSensi2RowDeleting" msprop:Generator_TablePropName="RMBSTradeSensi2">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecurityClass" msprop:Generator_UserColumnName="SecurityClass" msprop:Generator_ColumnPropNameInRow="SecurityClass" msprop:Generator_ColumnVarNameInTable="columnSecurityClass" msprop:Generator_ColumnPropNameInTable="SecurityClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecuritySubClass" msprop:Generator_UserColumnName="SecuritySubClass" msprop:Generator_ColumnPropNameInRow="SecuritySubClass" msprop:Generator_ColumnVarNameInTable="columnSecuritySubClass" msprop:Generator_ColumnPropNameInTable="SecuritySubClassColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Wrap" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Wrap" msprop:Generator_ColumnPropNameInRow="Wrap" msprop:Generator_ColumnVarNameInTable="columnWrap" msprop:Generator_ColumnPropNameInTable="WrapColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Outstanding" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Outstanding" msprop:Generator_ColumnPropNameInRow="Outstanding" msprop:Generator_ColumnVarNameInTable="columnOutstanding" msprop:Generator_ColumnPropNameInTable="OutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="CreditBPV" msdata:ReadOnly="true" msprop:Generator_UserColumnName="CreditBPV" msprop:Generator_ColumnPropNameInRow="CreditBPV" msprop:Generator_ColumnVarNameInTable="columnCreditBPV" msprop:Generator_ColumnPropNameInTable="CreditBPVColumn" type="xs:double" minOccurs="0" />
              <xs:element name="WAL" msdata:ReadOnly="true" msprop:Generator_UserColumnName="WAL" msprop:Generator_ColumnPropNameInRow="WAL" msprop:Generator_ColumnVarNameInTable="columnWAL" msprop:Generator_ColumnPropNameInTable="WALColumn" type="xs:double" minOccurs="0" />
              <xs:element name="Count" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Count" msprop:Generator_ColumnPropNameInRow="Count" msprop:Generator_ColumnVarNameInTable="columnCount" msprop:Generator_ColumnPropNameInTable="CountColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RMBSRatingWatchdogReport" msprop:Generator_UserTableName="RMBSRatingWatchdogReport" msprop:Generator_RowDeletedName="RMBSRatingWatchdogReportRowDeleted" msprop:Generator_RowChangedName="RMBSRatingWatchdogReportRowChanged" msprop:Generator_RowClassName="RMBSRatingWatchdogReportRow" msprop:Generator_RowChangingName="RMBSRatingWatchdogReportRowChanging" msprop:Generator_RowEvArgName="RMBSRatingWatchdogReportRowChangeEvent" msprop:Generator_RowEvHandlerName="RMBSRatingWatchdogReportRowChangeEventHandler" msprop:Generator_TableClassName="RMBSRatingWatchdogReportDataTable" msprop:Generator_TableVarName="tableRMBSRatingWatchdogReport" msprop:Generator_RowDeletingName="RMBSRatingWatchdogReportRowDeleting" msprop:Generator_TablePropName="RMBSRatingWatchdogReport">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Date" msprop:Generator_UserColumnName="Date" msprop:Generator_ColumnPropNameInRow="_Date" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_ColumnPropNameInTable="DateColumn" type="xs:dateTime" />
              <xs:element name="CUSIP" msprop:Generator_UserColumnName="CUSIP" msprop:Generator_ColumnPropNameInRow="CUSIP" msprop:Generator_ColumnVarNameInTable="columnCUSIP" msprop:Generator_ColumnPropNameInTable="CUSIPColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Ticker" msprop:Generator_UserColumnName="Ticker" msprop:Generator_ColumnPropNameInRow="Ticker" msprop:Generator_ColumnVarNameInTable="columnTicker" msprop:Generator_ColumnPropNameInTable="TickerColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Change" msprop:Generator_UserColumnName="Change" msprop:Generator_ColumnPropNameInRow="Change" msprop:Generator_ColumnVarNameInTable="columnChange" msprop:Generator_ColumnPropNameInTable="ChangeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Rating" msprop:Generator_UserColumnName="Rating" msprop:Generator_ColumnPropNameInRow="Rating" msprop:Generator_ColumnVarNameInTable="columnRating" msprop:Generator_ColumnPropNameInTable="RatingColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Watch" msprop:Generator_UserColumnName="Watch" msprop:Generator_ColumnPropNameInRow="Watch" msprop:Generator_ColumnVarNameInTable="columnWatch" msprop:Generator_ColumnPropNameInTable="WatchColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Old_x0020_rating" msprop:Generator_UserColumnName="Old rating" msprop:Generator_ColumnPropNameInRow="Old_rating" msprop:Generator_ColumnVarNameInTable="columnOld_rating" msprop:Generator_ColumnPropNameInTable="Old_ratingColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Old_x0020_watch" msprop:Generator_UserColumnName="Old watch" msprop:Generator_ColumnPropNameInRow="Old_watch" msprop:Generator_ColumnVarNameInTable="columnOld_watch" msprop:Generator_ColumnPropNameInTable="Old_watchColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Moodys" msprop:Generator_UserColumnName="Moodys" msprop:Generator_ColumnPropNameInRow="Moodys" msprop:Generator_ColumnVarNameInTable="columnMoodys" msprop:Generator_ColumnPropNameInTable="MoodysColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="S_x0026_P" msprop:Generator_UserColumnName="S&amp;P" msprop:Generator_ColumnPropNameInRow="_S_P" msprop:Generator_ColumnVarNameInTable="_columnS_P" msprop:Generator_ColumnPropNameInTable="_S_PColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Fitch" msprop:Generator_UserColumnName="Fitch" msprop:Generator_ColumnPropNameInRow="Fitch" msprop:Generator_ColumnVarNameInTable="columnFitch" msprop:Generator_ColumnPropNameInTable="FitchColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Score" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Score" msprop:Generator_ColumnPropNameInRow="Score" msprop:Generator_ColumnVarNameInTable="columnScore" msprop:Generator_ColumnPropNameInTable="ScoreColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WebLogDailyPageHits" msprop:Generator_UserTableName="WebLogDailyPageHits" msprop:Generator_RowDeletedName="WebLogDailyPageHitsRowDeleted" msprop:Generator_RowChangedName="WebLogDailyPageHitsRowChanged" msprop:Generator_RowClassName="WebLogDailyPageHitsRow" msprop:Generator_RowChangingName="WebLogDailyPageHitsRowChanging" msprop:Generator_RowEvArgName="WebLogDailyPageHitsRowChangeEvent" msprop:Generator_RowEvHandlerName="WebLogDailyPageHitsRowChangeEventHandler" msprop:Generator_TableClassName="WebLogDailyPageHitsDataTable" msprop:Generator_TableVarName="tableWebLogDailyPageHits" msprop:Generator_RowDeletingName="WebLogDailyPageHitsRowDeleting" msprop:Generator_TablePropName="WebLogDailyPageHits">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Page" msprop:Generator_UserColumnName="Page" msprop:Generator_ColumnPropNameInRow="Page" msprop:Generator_ColumnVarNameInTable="columnPage" msprop:Generator_ColumnPropNameInTable="PageColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Hits" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Hits" msprop:Generator_ColumnPropNameInRow="Hits" msprop:Generator_ColumnVarNameInTable="columnHits" msprop:Generator_ColumnPropNameInTable="HitsColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WebLogDailyUserHits" msprop:Generator_UserTableName="WebLogDailyUserHits" msprop:Generator_RowDeletedName="WebLogDailyUserHitsRowDeleted" msprop:Generator_RowChangedName="WebLogDailyUserHitsRowChanged" msprop:Generator_RowClassName="WebLogDailyUserHitsRow" msprop:Generator_RowChangingName="WebLogDailyUserHitsRowChanging" msprop:Generator_RowEvArgName="WebLogDailyUserHitsRowChangeEvent" msprop:Generator_RowEvHandlerName="WebLogDailyUserHitsRowChangeEventHandler" msprop:Generator_TableClassName="WebLogDailyUserHitsDataTable" msprop:Generator_TableVarName="tableWebLogDailyUserHits" msprop:Generator_RowDeletingName="WebLogDailyUserHitsRowDeleting" msprop:Generator_TablePropName="WebLogDailyUserHits">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Hits" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Hits" msprop:Generator_ColumnPropNameInRow="Hits" msprop:Generator_ColumnVarNameInTable="columnHits" msprop:Generator_ColumnPropNameInTable="HitsColumn" type="xs:int" minOccurs="0" />
              <xs:element name="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RMBSPrepayReport" msprop:Generator_UserTableName="RMBSPrepayReport" msprop:Generator_RowDeletedName="RMBSPrepayReportRowDeleted" msprop:Generator_RowChangedName="RMBSPrepayReportRowChanged" msprop:Generator_RowClassName="RMBSPrepayReportRow" msprop:Generator_RowChangingName="RMBSPrepayReportRowChanging" msprop:Generator_RowEvArgName="RMBSPrepayReportRowChangeEvent" msprop:Generator_RowEvHandlerName="RMBSPrepayReportRowChangeEventHandler" msprop:Generator_TableClassName="RMBSPrepayReportDataTable" msprop:Generator_TableVarName="tableRMBSPrepayReport" msprop:Generator_RowDeletingName="RMBSPrepayReportRowDeleting" msprop:Generator_TablePropName="RMBSPrepayReport">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Year" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" type="xs:int" minOccurs="0" />
              <xs:element name="Month" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Month" msprop:Generator_ColumnVarNameInTable="columnMonth" msprop:Generator_ColumnPropNameInRow="Month" msprop:Generator_ColumnPropNameInTable="MonthColumn" type="xs:int" minOccurs="0" />
              <xs:element name="MonthlyPrepay" msdata:ReadOnly="true" msprop:Generator_UserColumnName="MonthlyPrepay" msprop:Generator_ColumnVarNameInTable="columnMonthlyPrepay" msprop:Generator_ColumnPropNameInRow="MonthlyPrepay" msprop:Generator_ColumnPropNameInTable="MonthlyPrepayColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CDSNovation_x0020_Data" msprop:Generator_UserTableName="CDSNovation Data" msprop:Generator_RowDeletedName="CDSNovation_DataRowDeleted" msprop:Generator_RowChangedName="CDSNovation_DataRowChanged" msprop:Generator_RowClassName="CDSNovation_DataRow" msprop:Generator_RowChangingName="CDSNovation_DataRowChanging" msprop:Generator_RowEvArgName="CDSNovation_DataRowChangeEvent" msprop:Generator_RowEvHandlerName="CDSNovation_DataRowChangeEventHandler" msprop:Generator_TableClassName="CDSNovation_DataDataTable" msprop:Generator_TableVarName="tableCDSNovation_Data" msprop:Generator_RowDeletingName="CDSNovation_DataRowDeleting" msprop:Generator_TablePropName="CDSNovation_Data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SAVEDATE" msprop:Generator_UserColumnName="SAVEDATE" msprop:Generator_ColumnPropNameInRow="SAVEDATE" msprop:Generator_ColumnVarNameInTable="columnSAVEDATE" msprop:Generator_ColumnPropNameInTable="SAVEDATEColumn" type="xs:dateTime" />
              <xs:element name="NB" msprop:Generator_UserColumnName="NB" msprop:Generator_ColumnPropNameInRow="NB" msprop:Generator_ColumnVarNameInTable="columnNB" msprop:Generator_ColumnPropNameInTable="NBColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NBEXT" msprop:Generator_UserColumnName="NBEXT" msprop:Generator_ColumnPropNameInRow="NBEXT" msprop:Generator_ColumnVarNameInTable="columnNBEXT" msprop:Generator_ColumnPropNameInTable="NBEXTColumn" type="xs:int" minOccurs="0" />
              <xs:element name="PL_INSCUR" msprop:Generator_UserColumnName="PL_INSCUR" msprop:Generator_ColumnPropNameInRow="PL_INSCUR" msprop:Generator_ColumnVarNameInTable="columnPL_INSCUR" msprop:Generator_ColumnPropNameInTable="PL_INSCURColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FAMILY" msprop:Generator_UserColumnName="FAMILY" msprop:Generator_ColumnPropNameInRow="FAMILY" msprop:Generator_ColumnVarNameInTable="columnFAMILY" msprop:Generator_ColumnPropNameInTable="FAMILYColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GROUP" msprop:Generator_UserColumnName="GROUP" msprop:Generator_ColumnPropNameInRow="GROUP" msprop:Generator_ColumnVarNameInTable="columnGROUP" msprop:Generator_ColumnPropNameInTable="GROUPColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TP_STATUS" msprop:Generator_UserColumnName="TP_STATUS" msprop:Generator_ColumnPropNameInRow="TP_STATUS" msprop:Generator_ColumnVarNameInTable="columnTP_STATUS" msprop:Generator_ColumnPropNameInTable="TP_STATUSColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="COUNTERPART" msprop:Generator_UserColumnName="COUNTERPART" msprop:Generator_ColumnPropNameInRow="COUNTERPART" msprop:Generator_ColumnVarNameInTable="columnCOUNTERPART" msprop:Generator_ColumnPropNameInTable="COUNTERPARTColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PORTFOLIO" msprop:Generator_UserColumnName="PORTFOLIO" msprop:Generator_ColumnPropNameInRow="PORTFOLIO" msprop:Generator_ColumnVarNameInTable="columnPORTFOLIO" msprop:Generator_ColumnPropNameInTable="PORTFOLIOColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BRW_NOM1" msprop:Generator_UserColumnName="BRW_NOM1" msprop:Generator_ColumnPropNameInRow="BRW_NOM1" msprop:Generator_ColumnVarNameInTable="columnBRW_NOM1" msprop:Generator_ColumnPropNameInTable="BRW_NOM1Column" type="xs:double" minOccurs="0" />
              <xs:element name="TRNDATE" msprop:Generator_UserColumnName="TRNDATE" msprop:Generator_ColumnPropNameInRow="TRNDATE" msprop:Generator_ColumnVarNameInTable="columnTRNDATE" msprop:Generator_ColumnPropNameInTable="TRNDATEColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="MATURITY" msprop:Generator_UserColumnName="MATURITY" msprop:Generator_ColumnPropNameInRow="MATURITY" msprop:Generator_ColumnVarNameInTable="columnMATURITY" msprop:Generator_ColumnPropNameInTable="MATURITYColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EXPIRY" msprop:Generator_UserColumnName="EXPIRY" msprop:Generator_ColumnPropNameInRow="EXPIRY" msprop:Generator_ColumnVarNameInTable="columnEXPIRY" msprop:Generator_ColumnPropNameInTable="EXPIRYColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="VALID" msprop:Generator_UserColumnName="VALID" msprop:Generator_ColumnPropNameInRow="VALID" msprop:Generator_ColumnVarNameInTable="columnVALID" msprop:Generator_ColumnPropNameInTable="VALIDColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IE" msprop:Generator_UserColumnName="IE" msprop:Generator_ColumnPropNameInRow="IE" msprop:Generator_ColumnVarNameInTable="columnIE" msprop:Generator_ColumnPropNameInTable="IEColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="INSTRUMENT" msprop:Generator_UserColumnName="INSTRUMENT" msprop:Generator_ColumnPropNameInRow="INSTRUMENT" msprop:Generator_ColumnVarNameInTable="columnINSTRUMENT" msprop:Generator_ColumnPropNameInTable="INSTRUMENTColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MARKET_x0020_INDEX" msprop:Generator_UserColumnName="MARKET INDEX" msprop:Generator_ColumnPropNameInRow="MARKET_INDEX" msprop:Generator_ColumnVarNameInTable="columnMARKET_INDEX" msprop:Generator_ColumnPropNameInTable="MARKET_INDEXColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RATE_MARG0" msprop:Generator_UserColumnName="RATE_MARG0" msprop:Generator_ColumnPropNameInRow="RATE_MARG0" msprop:Generator_ColumnVarNameInTable="columnRATE_MARG0" msprop:Generator_ColumnPropNameInTable="RATE_MARG0Column" type="xs:double" minOccurs="0" />
              <xs:element name="B_x002F_S" msprop:Generator_UserColumnName="B/S" msprop:Generator_ColumnPropNameInRow="_B_S" msprop:Generator_ColumnVarNameInTable="_columnB_S" msprop:Generator_ColumnPropNameInTable="_B_SColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TRADER" msprop:Generator_UserColumnName="TRADER" msprop:Generator_ColumnPropNameInRow="TRADER" msprop:Generator_ColumnVarNameInTable="columnTRADER" msprop:Generator_ColumnPropNameInTable="TRADERColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MOP_LAST" msprop:Generator_UserColumnName="MOP_LAST" msprop:Generator_ColumnPropNameInRow="MOP_LAST" msprop:Generator_ColumnVarNameInTable="columnMOP_LAST" msprop:Generator_ColumnPropNameInTable="MOP_LASTColumn" type="xs:int" minOccurs="0" />
              <xs:element name="OPT_MOPLST" msprop:Generator_UserColumnName="OPT_MOPLST" msprop:Generator_ColumnPropNameInRow="OPT_MOPLST" msprop:Generator_ColumnVarNameInTable="columnOPT_MOPLST" msprop:Generator_ColumnPropNameInTable="OPT_MOPLSTColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PayRecvLeg" msprop:Generator_UserColumnName="PayRecvLeg" msprop:Generator_ColumnPropNameInRow="PayRecvLeg" msprop:Generator_ColumnVarNameInTable="columnPayRecvLeg" msprop:Generator_ColumnPropNameInTable="PayRecvLegColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="12" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="STL_FLW" msprop:Generator_UserColumnName="STL_FLW" msprop:Generator_ColumnPropNameInRow="STL_FLW" msprop:Generator_ColumnVarNameInTable="columnSTL_FLW" msprop:Generator_ColumnPropNameInTable="STL_FLWColumn" type="xs:double" minOccurs="0" />
              <xs:element name="BRW_SDTE" msprop:Generator_UserColumnName="BRW_SDTE" msprop:Generator_ColumnPropNameInRow="BRW_SDTE" msprop:Generator_ColumnVarNameInTable="columnBRW_SDTE" msprop:Generator_ColumnPropNameInTable="BRW_SDTEColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="OPT_FLWFST" msprop:Generator_UserColumnName="OPT_FLWFST" msprop:Generator_ColumnPropNameInRow="OPT_FLWFST" msprop:Generator_ColumnVarNameInTable="columnOPT_FLWFST" msprop:Generator_ColumnPropNameInTable="OPT_FLWFSTColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="SecurityName" msprop:Generator_UserColumnName="SecurityName" msprop:Generator_ColumnPropNameInRow="SecurityName" msprop:Generator_ColumnVarNameInTable="columnSecurityName" msprop:Generator_ColumnPropNameInTable="SecurityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expr1" msprop:Generator_UserColumnName="Expr1" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_ColumnVarNameInTable="columnExpr1" msprop:Generator_ColumnPropNameInTable="Expr1Column" type="xs:dateTime" />
              <xs:element name="CurrentOutstanding" msprop:Generator_UserColumnName="CurrentOutstanding" msprop:Generator_ColumnPropNameInRow="CurrentOutstanding" msprop:Generator_ColumnVarNameInTable="columnCurrentOutstanding" msprop:Generator_ColumnPropNameInTable="CurrentOutstandingColumn" type="xs:double" minOccurs="0" />
              <xs:element name="EntityName" msprop:Generator_UserColumnName="EntityName" msprop:Generator_ColumnPropNameInRow="EntityName" msprop:Generator_ColumnVarNameInTable="columnEntityName" msprop:Generator_ColumnPropNameInTable="EntityNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WebLog" msprop:Generator_UserTableName="WebLog" msprop:Generator_RowDeletedName="WebLogRowDeleted" msprop:Generator_TableClassName="WebLogDataTable" msprop:Generator_RowChangedName="WebLogRowChanged" msprop:Generator_RowClassName="WebLogRow" msprop:Generator_RowChangingName="WebLogRowChanging" msprop:Generator_RowEvArgName="WebLogRowChangeEvent" msprop:Generator_RowEvHandlerName="WebLogRowChangeEventHandler" msprop:Generator_TablePropName="WebLog" msprop:Generator_TableVarName="tableWebLog" msprop:Generator_RowDeletingName="WebLogRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TimeStamp" msprop:Generator_UserColumnName="TimeStamp" msprop:Generator_ColumnPropNameInRow="TimeStamp" msprop:Generator_ColumnVarNameInTable="columnTimeStamp" msprop:Generator_ColumnPropNameInTable="TimeStampColumn" type="xs:dateTime" />
              <xs:element name="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserHostAddress" msprop:Generator_UserColumnName="UserHostAddress" msprop:Generator_ColumnPropNameInRow="UserHostAddress" msprop:Generator_ColumnVarNameInTable="columnUserHostAddress" msprop:Generator_ColumnPropNameInTable="UserHostAddressColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Page" msprop:Generator_UserColumnName="Page" msprop:Generator_ColumnPropNameInRow="Page" msprop:Generator_ColumnVarNameInTable="columnPage" msprop:Generator_ColumnPropNameInTable="PageColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PortfolioMDY1" />
      <xs:field xpath="mstns:SENIORITY" />
    </xs:unique>
    <xs:unique name="SectorSpread_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SectorSpread" />
      <xs:field xpath="mstns:SaveDate" />
      <xs:field xpath="mstns:IndustrySubDesignations" />
    </xs:unique>
    <xs:unique name="mpCDSCurve_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:mpCDSCurve" />
      <xs:field xpath="mstns:EvalDate" />
      <xs:field xpath="mstns:TICKER" />
      <xs:field xpath="mstns:Tier" />
      <xs:field xpath="mstns:CCY" />
      <xs:field xpath="mstns:DocClause" />
    </xs:unique>
    <xs:unique name="CDSTODAY_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CDSTODAY" />
      <xs:field xpath="mstns:TICKER" />
    </xs:unique>
    <xs:unique name="WebLogDailyUserHits_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WebLogDailyUserHits" />
      <xs:field xpath="mstns:UserName" />
    </xs:unique>
    <xs:unique name="WebLog_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WebLog" />
      <xs:field xpath="mstns:TimeStamp" />
      <xs:field xpath="mstns:UserName" />
    </xs:unique>
  </xs:element>
</xs:schema>